%!PS-Adobe-2.0
%%Title: /home/alberto/chaste/trunk/projects/alberto/test/data/1DChasteVsMartin.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Jan 27 13:49:40 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/alberto/chaste/trunk/projects/alberto/test/data/1DChasteVsMartin.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Alberto Corrias,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jan 27 13:49:40 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
770 280 M
63 0 V
6157 0 R
-63 0 V
stroke
686 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-70)]
] -46.7 MRshow
1.000 UL
LTb
770 936 M
63 0 V
6157 0 R
-63 0 V
stroke
686 936 M
[ [(Helvetica) 140.0 0.0 true true 0 (-65)]
] -46.7 MRshow
1.000 UL
LTb
770 1592 M
63 0 V
6157 0 R
-63 0 V
stroke
686 1592 M
[ [(Helvetica) 140.0 0.0 true true 0 (-60)]
] -46.7 MRshow
1.000 UL
LTb
770 2248 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2248 M
[ [(Helvetica) 140.0 0.0 true true 0 (-55)]
] -46.7 MRshow
1.000 UL
LTb
770 2904 M
63 0 V
6157 0 R
-63 0 V
stroke
686 2904 M
[ [(Helvetica) 140.0 0.0 true true 0 (-50)]
] -46.7 MRshow
1.000 UL
LTb
770 3560 M
63 0 V
6157 0 R
-63 0 V
stroke
686 3560 M
[ [(Helvetica) 140.0 0.0 true true 0 (-45)]
] -46.7 MRshow
1.000 UL
LTb
770 4216 M
63 0 V
6157 0 R
-63 0 V
stroke
686 4216 M
[ [(Helvetica) 140.0 0.0 true true 0 (-40)]
] -46.7 MRshow
1.000 UL
LTb
770 4872 M
63 0 V
6157 0 R
-63 0 V
stroke
686 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 (-35)]
] -46.7 MRshow
1.000 UL
LTb
770 280 M
0 63 V
0 4529 R
0 -63 V
stroke
770 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2014 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2014 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
3258 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3258 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
4502 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4502 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
5746 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5746 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MCshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6990 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
770 4872 N
770 280 L
6220 0 V
0 4592 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2576 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Voltage \(mV\))]
] -46.7 MCshow
grestore
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
2691 4408 M
[ [(Helvetica) 140.0 0.0 true true 0 (FDM \(code from Martin\))]
] -46.7 MRshow
LT0
2775 4408 M
399 0 V
770 602 M
62 -43 V
62 -24 V
63 -16 V
62 -10 V
62 -7 V
62 -6 V
62 -3 V
63 28 V
62 269 V
62 440 V
62 502 V
62 461 V
63 344 V
62 221 V
62 136 V
62 87 V
62 63 V
63 49 V
62 42 V
62 38 V
62 36 V
62 32 V
63 24 V
62 18 V
62 14 V
62 13 V
62 13 V
63 14 V
62 14 V
62 14 V
62 15 V
62 15 V
63 15 V
62 15 V
62 15 V
62 15 V
62 15 V
63 15 V
62 16 V
62 16 V
62 16 V
62 16 V
63 17 V
62 16 V
62 17 V
62 17 V
62 18 V
63 17 V
62 18 V
62 17 V
62 18 V
62 18 V
63 17 V
62 18 V
62 18 V
62 17 V
62 18 V
63 17 V
62 17 V
62 17 V
62 17 V
62 17 V
63 16 V
62 17 V
62 16 V
62 15 V
62 16 V
63 15 V
62 15 V
62 15 V
62 14 V
62 15 V
63 14 V
62 13 V
62 14 V
62 13 V
62 13 V
63 12 V
62 13 V
62 12 V
62 12 V
62 11 V
63 11 V
62 11 V
62 11 V
62 10 V
62 11 V
63 10 V
62 9 V
62 10 V
62 9 V
62 9 V
63 8 V
62 9 V
62 8 V
62 8 V
62 8 V
63 7 V
62 7 V
770 602 Pls
832 559 Pls
894 535 Pls
957 519 Pls
1019 509 Pls
1081 502 Pls
1143 496 Pls
1205 493 Pls
1268 521 Pls
1330 790 Pls
1392 1230 Pls
1454 1732 Pls
1516 2193 Pls
1579 2537 Pls
1641 2758 Pls
1703 2894 Pls
1765 2981 Pls
1827 3044 Pls
1890 3093 Pls
1952 3135 Pls
2014 3173 Pls
2076 3209 Pls
2138 3241 Pls
2201 3265 Pls
2263 3283 Pls
2325 3297 Pls
2387 3310 Pls
2449 3323 Pls
2512 3337 Pls
2574 3351 Pls
2636 3365 Pls
2698 3380 Pls
2760 3395 Pls
2823 3410 Pls
2885 3425 Pls
2947 3440 Pls
3009 3455 Pls
3071 3470 Pls
3134 3485 Pls
3196 3501 Pls
3258 3517 Pls
3320 3533 Pls
3382 3549 Pls
3445 3566 Pls
3507 3582 Pls
3569 3599 Pls
3631 3616 Pls
3693 3634 Pls
3756 3651 Pls
3818 3669 Pls
3880 3686 Pls
3942 3704 Pls
4004 3722 Pls
4067 3739 Pls
4129 3757 Pls
4191 3775 Pls
4253 3792 Pls
4315 3810 Pls
4378 3827 Pls
4440 3844 Pls
4502 3861 Pls
4564 3878 Pls
4626 3895 Pls
4689 3911 Pls
4751 3928 Pls
4813 3944 Pls
4875 3959 Pls
4937 3975 Pls
5000 3990 Pls
5062 4005 Pls
5124 4020 Pls
5186 4034 Pls
5248 4049 Pls
5311 4063 Pls
5373 4076 Pls
5435 4090 Pls
5497 4103 Pls
5559 4116 Pls
5622 4128 Pls
5684 4141 Pls
5746 4153 Pls
5808 4165 Pls
5870 4176 Pls
5933 4187 Pls
5995 4198 Pls
6057 4209 Pls
6119 4219 Pls
6181 4230 Pls
6244 4240 Pls
6306 4249 Pls
6368 4259 Pls
6430 4268 Pls
6492 4277 Pls
6555 4285 Pls
6617 4294 Pls
6679 4302 Pls
6741 4310 Pls
6803 4318 Pls
6866 4325 Pls
6928 4332 Pls
2974 4408 Pls
1.000 UP
1.000 UL
LT1
LTb
2691 4268 M
[ [(Helvetica) 140.0 0.0 true true 0 (FEM \(Chaste\))]
] -46.7 MRshow
LT1
2775 4268 M
399 0 V
770 603 M
62 -44 V
62 -24 V
63 -16 V
62 -10 V
62 -7 V
62 -5 V
62 -4 V
63 24 V
62 267 V
62 457 V
62 533 V
62 501 V
63 384 V
62 252 V
62 154 V
62 95 V
62 58 V
63 36 V
62 21 V
62 12 V
62 5 V
62 0 V
63 0 V
62 1 V
62 5 V
62 8 V
62 12 V
63 13 V
62 15 V
62 16 V
62 17 V
62 16 V
63 17 V
62 16 V
62 16 V
62 17 V
62 16 V
63 16 V
62 16 V
62 16 V
62 16 V
62 16 V
63 17 V
62 17 V
62 16 V
62 18 V
62 17 V
63 17 V
62 18 V
62 17 V
62 18 V
62 18 V
63 17 V
62 18 V
62 18 V
62 17 V
62 18 V
63 17 V
62 17 V
62 17 V
62 17 V
62 16 V
63 17 V
62 16 V
62 16 V
62 15 V
62 16 V
63 15 V
62 15 V
62 15 V
62 14 V
62 14 V
63 14 V
62 14 V
62 13 V
62 13 V
62 13 V
63 12 V
62 12 V
62 12 V
62 12 V
62 11 V
63 12 V
62 10 V
62 11 V
62 10 V
62 11 V
63 9 V
62 10 V
62 9 V
62 9 V
62 9 V
63 9 V
62 8 V
62 8 V
62 8 V
62 8 V
63 7 V
62 7 V
62 7 V
770 603 Crs
832 559 Crs
894 535 Crs
957 519 Crs
1019 509 Crs
1081 502 Crs
1143 497 Crs
1205 493 Crs
1268 517 Crs
1330 784 Crs
1392 1241 Crs
1454 1774 Crs
1516 2275 Crs
1579 2659 Crs
1641 2911 Crs
1703 3065 Crs
1765 3160 Crs
1827 3218 Crs
1890 3254 Crs
1952 3275 Crs
2014 3287 Crs
2076 3292 Crs
2138 3292 Crs
2201 3292 Crs
2263 3293 Crs
2325 3298 Crs
2387 3306 Crs
2449 3318 Crs
2512 3331 Crs
2574 3346 Crs
2636 3362 Crs
2698 3379 Crs
2760 3395 Crs
2823 3412 Crs
2885 3428 Crs
2947 3444 Crs
3009 3461 Crs
3071 3477 Crs
3134 3493 Crs
3196 3509 Crs
3258 3525 Crs
3320 3541 Crs
3382 3557 Crs
3445 3574 Crs
3507 3591 Crs
3569 3607 Crs
3631 3625 Crs
3693 3642 Crs
3756 3659 Crs
3818 3677 Crs
3880 3694 Crs
3942 3712 Crs
4004 3730 Crs
4067 3747 Crs
4129 3765 Crs
4191 3783 Crs
4253 3800 Crs
4315 3818 Crs
4378 3835 Crs
4440 3852 Crs
4502 3869 Crs
4564 3886 Crs
4626 3902 Crs
4689 3919 Crs
4751 3935 Crs
4813 3951 Crs
4875 3966 Crs
4937 3982 Crs
5000 3997 Crs
5062 4012 Crs
5124 4027 Crs
5186 4041 Crs
5248 4055 Crs
5311 4069 Crs
5373 4083 Crs
5435 4096 Crs
5497 4109 Crs
5559 4122 Crs
5622 4134 Crs
5684 4146 Crs
5746 4158 Crs
5808 4170 Crs
5870 4181 Crs
5933 4193 Crs
5995 4203 Crs
6057 4214 Crs
6119 4224 Crs
6181 4235 Crs
6244 4244 Crs
6306 4254 Crs
6368 4263 Crs
6430 4272 Crs
6492 4281 Crs
6555 4290 Crs
6617 4298 Crs
6679 4306 Crs
6741 4314 Crs
6803 4322 Crs
6866 4329 Crs
6928 4336 Crs
6990 4343 Crs
2974 4268 Crs
1.000 UL
LTb
770 4872 N
770 280 L
6220 0 V
0 4592 V
-6220 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
