<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  targetNamespace="https://chaste.comlab.ox.ac.uk/nss/parameters/2_0"
  xmlns="https://chaste.comlab.ox.ac.uk/nss/parameters/2_0" elementFormDefault="qualified">

  <xs:complexType name="time_type">
    <xs:annotation>
      <xs:documentation>Represents variables with dimensions of time. Measured in milliseconds.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="unit" type="xs:string" use="required" fixed="ms">
          <xs:annotation>
            <xs:documentation>Chaste time is measured in milliseconds</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="dimensionless_type">
    <xs:annotation>
      <xs:documentation>Used to represent dimensionless variables.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="unit" type="xs:string" use="required" fixed="dimensionless"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="conductivity_type">
    <xs:annotation>
      <xs:documentation>Represents conductivity. Measured in mS/cm.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="unit" type="xs:string" use="required" fixed="mS/cm"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="stimulus_strength_type">
    <xs:annotation>
      <xs:documentation>Represents the strength of stimulus per unit volume. Measured in uA/cm^3.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="unit" type="xs:string" use="required" fixed="uA/cm^3"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="inverse_length_type">
    <xs:annotation>
      <xs:documentation>Used for variables with dimensions 1/length. Units of 1/cm.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="unit" type="xs:string" use="required" fixed="1/cm"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="capacitance_type">
    <xs:annotation>
      <xs:documentation>Represents capacitance per unit area. Measured in uF/cm^2.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="unit" type="xs:string" use="required" fixed="uF/cm^2"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>


  <xs:complexType name="location_type">
    <xs:annotation>
      <xs:documentation>Defines a special region with different behaviour from elsewhere. This will be either an axis-aligned cuboid or a layer of the cardiac wall.</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="Cuboid" type="box_type">
        <xs:annotation>
          <xs:documentation>Axis-aligned bounding box defined by LowerCoordinates and UpperCoordinates attributes.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EpiLayer" type="dimensionless_type">
        <xs:annotation>
          <xs:documentation>Proportion of cardiac wall that is in the epicardium (outer wall). Value must be between 0 and 1. The sum of EpiLayer, MidLayer and EndoLayer should be 1.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MidLayer" type="dimensionless_type">
        <xs:annotation>
          <xs:documentation>Proportion of cardiac wall that is in the myocardium (middle). Value must be between 0 and 1. The sum of EpiLayer, MidLayer and EndoLayer should be 1.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EndoLayer" type="dimensionless_type">
        <xs:annotation>
          <xs:documentation>Proportion of cardiac wall that is in the endocardium (inner wall). Value must be between 0 and 1. The sum of EpiLayer, MidLayer and EndoLayer should be 1.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attribute name="unit" type="xs:string" use="required" fixed="cm"/>
  </xs:complexType>

  <xs:simpleType name="domain_type">
    <xs:annotation>
      <xs:documentation>Whether a monodomain or bidomain simulation will be run. Values restricted to "Mono" and "Bi".</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Mono"/>
      <xs:enumeration value="Bi"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ionic_models_available_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        An enumeration of cardiac ionic models supplied with Chaste.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Fox2002BackwardEuler"/>
      <xs:enumeration value="LuoRudyIBackwardEuler"/>
      <xs:enumeration value="LuoRudyI"/>
      <xs:enumeration value="FaberRudy2000Optimised"/>
      <xs:enumeration value="FaberRudy2000"/>
      <xs:enumeration value="DifrancescoNoble"/>
      <xs:enumeration value="MahajanShiferaw"/>
      <xs:enumeration value="HodgkinHuxley"/>
      <xs:enumeration value="tenTusscher2006"/>
      <xs:enumeration value="Maleckar"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ionic_model_selection_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Ionic models may be specified in 2 ways: either through a model hardcoded
        into Chaste, and chosen from a list, or through a model dynamically loaded
        from a shared library (.so file).
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="Hardcoded" type="ionic_models_available_type"/>
      <xs:element name="Dynamic" type="dynamically_loaded_ionic_model_type"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="dynamically_loaded_ionic_model_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
      A dynamically loadable ionic model is (currently) specified just by given the
      path of the file to load.  At present this must be a .so file.  Eventually we
      will add the ability to specify a CellML file here, from which a .so will be
      created on the fly.
    </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Path" type="path_type"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="path_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
      A file path.
    </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="relative_to" type="relative_to_type" default="cwd"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="relative_to_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
      An attribute for path_type elements that describes how to interpret the path value.
      It can be relative to the current working directory, relative to $CHASTE_TEST_OUTPUT,
      <!--relative to the parameters file, -->relative to the Chaste source code root, or an absolute path.
    </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="cwd"/>
      <xs:enumeration value="chaste_test_output"/>
      <!-- <xs:enumeration value="this_file"/> Rather difficult to implement... -->
      <xs:enumeration value="chaste_source_root"/>
      <xs:enumeration value="absolute"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="ionic_model_region_type">
    <xs:annotation><xs:documentation xml:lang="en">
      Associates a region of the mesh with a particular ionic model.
    </xs:documentation></xs:annotation>
    <xs:sequence>
      <xs:element name="IonicModel" type="ionic_model_selection_type"/>
      <xs:element name="Location" type="location_type"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="ionic_models_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        This element specified the ionic model(s) to use for simulation.  A default model
        must be given, and can be overridden in particular regions.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Default" type="ionic_model_selection_type">
        <xs:annotation>
          <xs:documentation>Default ionic model type to be run everywhere. Can be overridden by specifying a region model type.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Region" type="ionic_model_region_type" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Specifies an ionic model type in a region to be used instead of the default type.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="apd_map_type">
    <xs:annotation>
      <xs:documentation>Postprocessing type. Requests a sequence of action potential durations (in milliseconds) at each mesh node. Requires specification of repolarisation percentage (i.e. 90% for APD90, 20% for APD20 etc) and a threshold (a voltage used internally in Chaste code to determine the end of one action potential and prepare for the start of the next).</xs:documentation>
    </xs:annotation>
    <xs:attribute name="repolarisation_percentage" type="xs:double" use="required"/>
    <xs:attribute name="threshold" type="xs:double" use="required"/>
    <xs:attribute name="threshold_unit" type="xs:string" use="required" fixed="mV"/>
  </xs:complexType>

  <xs:complexType name="upstrokes_map_type">
    <xs:annotation>
      <xs:documentation>Postprocessing type. Requests a sequence of the times of upstrokes (in milliseconds) at each mesh node. Requires specification of a threshold (a voltage used internally in Chaste code to determine the end of one action potential and prepare for the start of the next).</xs:documentation>
    </xs:annotation>
    <xs:attribute name="threshold" type="xs:double" use="required"/>
    <xs:attribute name="threshold_unit" type="xs:string" use="required" fixed="mV"/>
  </xs:complexType>

  <xs:complexType name="max_upstrokes_velocity_map_type">
    <xs:annotation>
      <xs:documentation>Postprocessing type. Requests a sequence of the maximum upstroke velocity (in mV/ms) at each mesh node. Requires specification of a threshold (a voltage used internally in Chaste code to determine the end of one action potential and prepare for the start of the next).</xs:documentation>
    </xs:annotation>
    <xs:attribute name="threshold" type="xs:double" use="required"/>
    <xs:attribute name="threshold_unit" type="xs:string" use="required" fixed="mV"/>
  </xs:complexType>

  <xs:complexType name="conduction_velocity_map_type">
    <xs:annotation>
      <xs:documentation>Postprocessing type. For each mesh node, computes the conduction velocity of an action potential relative to an origin node. The conduction velocity is the difference between the times of first upstroke divided by the distance between the nodes (measured as the shortest path within the mesh). Requires specification of the origin node index.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="origin_node" type="xs:nonNegativeInteger" use="required"/>
  </xs:complexType>

  <xs:simpleType name="media_type">
    <xs:annotation>
      <xs:documentation>The conductivity media of the tissue.  This is taken from an enumeration: Orthotropic is for 3 orthogonal conductivity directions (fibre, sheet and normal); Axisymmetric is for fibre direction only; NoFibreOrientation is for isotropic conductivity.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Orthotropic"/>
      <xs:enumeration value="Axisymmetric"/>
      <xs:enumeration value="NoFibreOrientation"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="point_type">
    <xs:annotation>
      <xs:documentation>Used to represent a point in space (up to 3d). Attributes x, y, z (all doubles) measured in cm.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="x" type="xs:double" use="required"/>
    <xs:attribute name="y" type="xs:double" use="required"/>
    <xs:attribute name="z" type="xs:double" use="required"/>
  </xs:complexType>

  <xs:complexType name="box_type">
    <xs:annotation>
      <xs:documentation>Axis-aligned bounding box defined by LowerCoordinates and UpperCoordinates attributes.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="LowerCoordinates" type="point_type">
        <xs:annotation>
          <xs:documentation>Represents the vertex in the cuboid that has the most negative values of all coordinates.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="UpperCoordinates" type="point_type">
        <xs:annotation>
          <xs:documentation>Represents the vertex in the cuboid that has the most positive values of all coordinates.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="stimulus_type">
    <xs:annotation>
      <xs:documentation>Defines a simple intra-cellular current stimulus which injects a square-wave current into all stimulated cells.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Strength" type="stimulus_strength_type">
        <xs:annotation>
          <xs:documentation>The strength of the stimulus (current per unit volume measured in uA/cm^3).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Duration" type="time_type">
        <xs:annotation>
          <xs:documentation>Time for which to apply the stimulus (ms).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Delay" type="time_type">
        <xs:annotation>
          <xs:documentation>Delay is the time at which to start applying the stimulus.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Location" type="location_type">
        <xs:annotation>
          <xs:documentation>Location of the nodes at which to apply this stimulus.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="cell_heterogeneity_type">
    <xs:sequence>
      <xs:element name="ScaleFactorGks" type="dimensionless_type">
        <xs:annotation>
          <xs:documentation>Scales the Gks slow delayed rectifier potassium current. (A value of 1.0 will reset to the default value in the CellML definition.)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ScaleFactorIto" type="dimensionless_type">
        <xs:annotation>
          <xs:documentation>Scales the Ito transient outward potassium current. (A value of 1.0 will reset to the default value in the CellML definition.)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ScaleFactorGkr" type="dimensionless_type">
        <xs:annotation>
          <xs:documentation>Scales the Gkr rapid delayed rectifier potassium current. (A value of 1.0 will reset to the default value in the CellML definition.)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Location" type="location_type">
        <xs:annotation>
          <xs:documentation>Location of nodes at which to apply these scale factors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="conductivity_heterogeneity_type">
    <xs:all>
      <xs:element name="IntracellularConductivities" type="conductivities_type" minOccurs="0"/>
      <xs:element name="ExtracellularConductivities" type="conductivities_type" minOccurs="0"/>
      <xs:element name="Location" type="location_type"/>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="slab_type">
    <xs:attribute name="x" type="xs:double" use="required"/>
    <xs:attribute name="y" type="xs:double" use="required"/>
    <xs:attribute name="z" type="xs:double" use="required"/>
    <xs:attribute name="inter_node_space" type="xs:double" use="required"/>
  </xs:complexType>

  <xs:complexType name="sheet_type">
    <xs:attribute name="x" type="xs:double" use="required"/>
    <xs:attribute name="y" type="xs:double" use="required"/>
    <xs:attribute name="inter_node_space" type="xs:double" use="required"/>
  </xs:complexType>

  <xs:complexType name="fibre_type">
    <xs:attribute name="x" type="xs:double" use="required"/>
    <xs:attribute name="inter_node_space" type="xs:double" use="required"/>
  </xs:complexType>

  <xs:complexType name="load_mesh_type">
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="conductivity_media" type="media_type" use="required"/>
  </xs:complexType>

  <xs:complexType name="mesh_type">
    <xs:choice>
      <xs:element name="Slab" type="slab_type"/>
      <xs:element name="Sheet" type="sheet_type"/>
      <xs:element name="Fibre" type="fibre_type"/>
      <xs:element name="LoadMesh" type="load_mesh_type"/>
    </xs:choice>
    <xs:attribute name="unit" type="xs:string" use="required" fixed="cm"/>
  </xs:complexType>

  <xs:complexType name="conductivities_type">
    <xs:attribute name="longi" type="xs:double" use="required"/>
    <xs:attribute name="trans" type="xs:double" use="required"/>
    <xs:attribute name="normal" type="xs:double" use="required"/>
    <xs:attribute name="unit" type="xs:string" use="required" fixed="mS/cm"/>
  </xs:complexType>

  <xs:complexType name="var_type">
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="output_variables_type">
    <xs:sequence>
      <xs:element name="Var" type="var_type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="yesno_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="yes"/>
      <xs:enumeration value="no"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="output_visualizer_type">
    <xs:attribute name="meshalyzer" type="yesno_type" default="yes" use="optional"/>
    <xs:attribute name="cmgui" type="yesno_type" default="no" use="optional"/>
    <xs:attribute name="vtk" type="yesno_type" default="no" use="optional"/>
  </xs:complexType>

  <xs:complexType name="time_steps_type">
    <xs:attribute name="ode" type="xs:double" use="required"/>
    <xs:attribute name="pde" type="xs:double" use="required"/>
    <xs:attribute name="printing" type="xs:double" use="required"/>
    <xs:attribute name="unit" type="xs:string" use="required" fixed="ms"/>
  </xs:complexType>

  <xs:simpleType name="ksp_use_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="relative"/>
      <xs:enumeration value="absolute"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ksp_tolerances_type">
    <xs:choice>
      <xs:element name="KSPRelative" type="xs:double"/>
      <xs:element name="KSPAbsolute" type="xs:double"/>
    </xs:choice>
  </xs:complexType>

  <xs:simpleType name="ksp_solver_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="cg"/>
      <xs:enumeration value="symmlq"/>
      <xs:enumeration value="gmres"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ksp_preconditioner_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ilu"/>
      <xs:enumeration value="jacobi"/>
      <xs:enumeration value="bjacobi"/>
      <xs:enumeration value="hypre"/>
      <xs:enumeration value="ml"/>
      <xs:enumeration value="spai"/>
      <xs:enumeration value="blockdiagonal"/>
      <xs:enumeration value="ldufactorisation"/>
      <xs:enumeration value="none"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="checkpoint_type">
    <xs:attribute name="timestep" type="xs:double" use="required"/>
    <xs:attribute name="max_checkpoints_on_disk" type="xs:unsignedInt" use="required"/>
    <xs:attribute name="unit" type="xs:string" use="required" fixed="ms"/>
  </xs:complexType>


  <xs:complexType name="adaptivity_parameters_type">
    <xs:attribute name="target_error" type="xs:double" use="required"/>
    <xs:attribute name="sigma" type="xs:double" use="required"/>
    <xs:attribute name="max_edge_length" type="xs:double" use="required"/>
    <xs:attribute name="min_edge_length" type="xs:double" use="required"/>
    <xs:attribute name="gradation" type="xs:double" use="required"/>
    <xs:attribute name="max_nodes" type="xs:integer" use="required"/>
    <xs:attribute name="num_sweeps" type="xs:integer" use="required"/>
  </xs:complexType>

  <xs:complexType name="simulation_type">
    <xs:all>
      <xs:element name="SpaceDimension" type="xs:integer" minOccurs="0"/>
      <xs:element name="SimulationDuration" type="time_type" minOccurs="0"/>
      <xs:element name="Domain" type="domain_type" minOccurs="0"/>
      <xs:element name="Mesh" type="mesh_type" minOccurs="0"/>

      <xs:element name="IonicModels" type="ionic_models_type" minOccurs="0"/>

      <xs:element name="Stimuli" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Stimulus" type="stimulus_type" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="CellHeterogeneities" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CellHeterogeneity" type="cell_heterogeneity_type" minOccurs="0"
              maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="ConductivityHeterogeneities" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ConductivityHeterogeneity" type="conductivity_heterogeneity_type"
              minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="OutputDirectory" type="xs:string" minOccurs="0"/>
      <xs:element name="OutputFilenamePrefix" type="xs:string" minOccurs="0"/>
      <xs:element name="OutputVariables" type="output_variables_type" minOccurs="0"/>
      <xs:element name="OutputVisualizer" type="output_visualizer_type" minOccurs="0" maxOccurs="1"/>

      <xs:element name="CheckpointSimulation" type="checkpoint_type" minOccurs="0"/>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="resume_simulation_type">
    <xs:all>
      <xs:element name="ArchiveDirectory" type="xs:string"/>
      <xs:element name="SpaceDimension" type="xs:integer"/>
      <xs:element name="Domain" type="domain_type"/>
      <xs:element name="SimulationDuration" type="time_type"/>
      <xs:element name="CheckpointSimulation" type="checkpoint_type" minOccurs="0"/>
      <xs:element name="OutputVisualizer" type="output_visualizer_type" minOccurs="1" maxOccurs="1"
      />
    </xs:all>
  </xs:complexType>

  <xs:complexType name="physiological_type">
    <xs:all>
      <xs:element name="IntracellularConductivities" type="conductivities_type" minOccurs="0"/>
      <xs:element name="ExtracellularConductivities" type="conductivities_type" minOccurs="0"/>
      <xs:element name="BathConductivity" type="conductivity_type" minOccurs="0"/>
      <xs:element name="SurfaceAreaToVolumeRatio" type="inverse_length_type" minOccurs="0"/>
      <xs:element name="Capacitance" type="capacitance_type" minOccurs="0"/>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="numerical_type">
    <xs:all>
      <xs:element name="TimeSteps" type="time_steps_type" minOccurs="0"/>
      <xs:element name="KSPTolerances" type="ksp_tolerances_type" minOccurs="0"/>
      <xs:element name="KSPSolver" type="ksp_solver_type" minOccurs="0"/>
      <xs:element name="KSPPreconditioner" type="ksp_preconditioner_type" minOccurs="0"/>
      <xs:element name="AdaptivityParameters" type="adaptivity_parameters_type" minOccurs="0"/>
    </xs:all>
  </xs:complexType>


  <xs:complexType name="postprocessing_type">
    <xs:sequence>
      <xs:element name="ActionPotentialDurationMap" type="apd_map_type" minOccurs="0"
        maxOccurs="unbounded"/>
      <xs:element name="UpstrokeTimeMap" type="upstrokes_map_type" minOccurs="0"
        maxOccurs="unbounded"/>
      <xs:element name="MaxUpstrokeVelocityMap" type="max_upstrokes_velocity_map_type" minOccurs="0"
        maxOccurs="unbounded"/>
      <xs:element name="ConductionVelocityMap" type="conduction_velocity_map_type" minOccurs="0"
        maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>



  <xs:complexType name="chaste_parameters_type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="Simulation" type="simulation_type"/>
        <xs:element name="ResumeSimulation" type="resume_simulation_type"/>
      </xs:choice>
      <xs:element name="Physiological" type="physiological_type"/>
      <xs:element name="Numerical" type="numerical_type"/>
      <xs:element name="PostProcessing" type="postprocessing_type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <!-- The single root element.  All parameters files must start with this. -->
  <xs:element name="ChasteParameters" type="chaste_parameters_type"/>

</xs:schema>
