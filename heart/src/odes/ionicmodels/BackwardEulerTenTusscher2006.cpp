//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: tentusscher_model_2006_epi
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translate: 8406, pycml: 8196)
//! on Tue Apr  6 18:14:39 2010
//! 
//! <autogenerated>

// Implementation of BackwardEulerTenTusscher2006 with lookup tables ranging [-250, 350] mV

#include "BackwardEulerTenTusscher2006.hpp"
#include <cmath>
#include <cassert>
#include "CardiacNewtonSolver.hpp"
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"

class BackwardEulerTenTusscher2006_LookupTables
{
public:
    static BackwardEulerTenTusscher2006_LookupTables* Instance()
    {
        if (mpInstance == NULL)
        {
            mpInstance = new BackwardEulerTenTusscher2006_LookupTables;
        }
        return mpInstance;
    }
    
    // Methods to look up values from lookup tables
    // using linear interpolation
    inline double _lookup_0(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][0];
        double y2 = _lookup_table_0[i+1][0];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_1(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][1];
        double y2 = _lookup_table_0[i+1][1];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_2(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][2];
        double y2 = _lookup_table_0[i+1][2];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_3(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][3];
        double y2 = _lookup_table_0[i+1][3];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_4(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][4];
        double y2 = _lookup_table_0[i+1][4];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_5(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][5];
        double y2 = _lookup_table_0[i+1][5];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_6(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][6];
        double y2 = _lookup_table_0[i+1][6];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_7(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][7];
        double y2 = _lookup_table_0[i+1][7];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_8(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][8];
        double y2 = _lookup_table_0[i+1][8];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_9(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][9];
        double y2 = _lookup_table_0[i+1][9];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_10(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][10];
        double y2 = _lookup_table_0[i+1][10];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_11(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][11];
        double y2 = _lookup_table_0[i+1][11];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_12(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][12];
        double y2 = _lookup_table_0[i+1][12];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_13(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][13];
        double y2 = _lookup_table_0[i+1][13];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_14(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][14];
        double y2 = _lookup_table_0[i+1][14];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_15(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][15];
        double y2 = _lookup_table_0[i+1][15];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_16(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][16];
        double y2 = _lookup_table_0[i+1][16];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_17(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][17];
        double y2 = _lookup_table_0[i+1][17];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_18(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][18];
        double y2 = _lookup_table_0[i+1][18];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_19(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][19];
        double y2 = _lookup_table_0[i+1][19];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_20(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][20];
        double y2 = _lookup_table_0[i+1][20];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_21(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][21];
        double y2 = _lookup_table_0[i+1][21];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_22(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][22];
        double y2 = _lookup_table_0[i+1][22];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_23(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][23];
        double y2 = _lookup_table_0[i+1][23];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_24(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][24];
        double y2 = _lookup_table_0[i+1][24];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_25(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][25];
        double y2 = _lookup_table_0[i+1][25];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_26(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][26];
        double y2 = _lookup_table_0[i+1][26];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_27(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][27];
        double y2 = _lookup_table_0[i+1][27];
        return y1 + (y2-y1)*factor;
    }
    
    inline double _lookup_28(unsigned i, double factor)
    {
        double y1 = _lookup_table_0[i][28];
        double y2 = _lookup_table_0[i+1][28];
        return y1 + (y2-y1)*factor;
    }
    
    
protected:
    BackwardEulerTenTusscher2006_LookupTables(const BackwardEulerTenTusscher2006_LookupTables&);
    BackwardEulerTenTusscher2006_LookupTables& operator= (const BackwardEulerTenTusscher2006_LookupTables&);
    BackwardEulerTenTusscher2006_LookupTables()
    {
        assert(mpInstance == NULL);
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][0] = 1.0 / (1.0 + exp(( -26.0 - var_membrane__V) * 0.142857142857));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][1] = (450.0 / (1.0 + exp(( -45.0 - var_membrane__V) * 0.1))) * (6.0 / (1.0 + exp((var_membrane__V + 30.0) * 0.0869565217391)));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][2] = 1.0 / (1.0 + exp((var_membrane__V + 88.0) * 0.0416666666667));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][3] = (3.0 / (1.0 + exp(( -60.0 - var_membrane__V) * 0.05))) * (1.12 / (1.0 + exp((var_membrane__V - 60.0) * 0.05)));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][4] = 1.0 / (1.0 + exp(( -5.0 - var_membrane__V) * 0.0714285714286));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][5] = ((1400.0 / sqrt(1.0 + exp((5.0 - var_membrane__V) * 0.166666666667))) * (1.0 / (1.0 + exp((var_membrane__V - 35.0) * 0.0666666666667)))) + 80.0;
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][6] = 1.0 / pow(1.0 + exp(( -56.86 - var_membrane__V) * 0.110741971207), 2.0);
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][7] = (1.0 / (1.0 + exp(( -60.0 - var_membrane__V) * 0.2))) * ((0.1 / (1.0 + exp((var_membrane__V + 35.0) * 0.2))) + (0.1 / (1.0 + exp((var_membrane__V - 50.0) * 0.005))));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][8] = 1.0 / pow(1.0 + exp((var_membrane__V + 71.55) * 0.134589502019), 2.0);
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][9] = 1.0 / (((var_membrane__V <  -40.0) ? (0.057 * exp((-(var_membrane__V + 80.0)) * 0.147058823529)) : 0.0) + ((var_membrane__V <  -40.0) ? ((2.7 * exp(0.079 * var_membrane__V)) + (310000.0 * exp(0.3485 * var_membrane__V))) : (0.77 / (0.13 * (1.0 + exp((var_membrane__V + 10.66) *  -0.0900900900901))))));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][10] = 1.0 / pow(1.0 + exp((var_membrane__V + 71.55) * 0.134589502019), 2.0);
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][11] = 1.0 / (((var_membrane__V <  -40.0) ? (((( -25428.0 * exp(0.2444 * var_membrane__V)) - (6.948e-06 * exp( -0.04391 * var_membrane__V))) * (var_membrane__V + 37.78)) / (1.0 + exp(0.311 * (var_membrane__V + 79.23)))) : 0.0) + ((var_membrane__V <  -40.0) ? ((0.02424 * exp( -0.01052 * var_membrane__V)) / (1.0 + exp( -0.1378 * (var_membrane__V + 40.14)))) : ((0.6 * exp(0.057 * var_membrane__V)) / (1.0 + exp( -0.1 * (var_membrane__V + 32.0))))));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][12] = exp((2.0 * (var_membrane__V - 15.0) * 96485.3415) * 3.87974901066e-07);
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][13] = exp((2.0 * (var_membrane__V - 15.0) * 96485.3415) * 3.87974901066e-07) - 1.0;
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][14] = 1.0 / (1.0 + exp(( -8.0 - var_membrane__V) * 0.133333333333));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][15] = (((1.4 / (1.0 + exp(( -35.0 - var_membrane__V) * 0.0769230769231))) + 0.25) * (1.4 / (1.0 + exp((var_membrane__V + 5.0) * 0.2)))) + (1.0 / (1.0 + exp((50.0 - var_membrane__V) * 0.05)));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][16] = 1.0 / (1.0 + exp((var_membrane__V + 20.0) * 0.142857142857));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][17] = (1102.5 * exp((-pow(var_membrane__V + 27.0, 2.0)) * 0.00444444444444)) + (200.0 / (1.0 + exp((13.0 - var_membrane__V) * 0.1))) + (180.0 / (1.0 + exp((var_membrane__V + 30.0) * 0.1))) + 20.0;
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][18] = (0.67 / (1.0 + exp((var_membrane__V + 35.0) * 0.142857142857))) + 0.33;
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][19] = (562.0 * exp((-pow(var_membrane__V + 27.0, 2.0)) * 0.00416666666667)) + (31.0 / (1.0 + exp((25.0 - var_membrane__V) * 0.1))) + (80.0 / (1.0 + exp((var_membrane__V + 30.0) * 0.1)));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][20] = 1.0 / (1.0 + exp((var_membrane__V + 20.0) * 0.2));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][21] = (85.0 * exp((-pow(var_membrane__V + 45.0, 2.0)) * 0.003125)) + (5.0 / (1.0 + exp((var_membrane__V - 20.0) * 0.2))) + 3.0;
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][22] = 1.0 / (1.0 + exp((20.0 - var_membrane__V) * 0.166666666667));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][23] = (9.5 * exp((-pow(var_membrane__V + 40.0, 2.0)) * 0.000555555555556)) + 0.8;
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][24] = 1.0 + (0.1245 * exp(( -0.1 * var_membrane__V * 96485.3415) * 3.87974901066e-07)) + (0.0353 * exp(((-var_membrane__V) * 96485.3415) * 3.87974901066e-07));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][25] = exp((0.35 * var_membrane__V * 96485.3415) * 3.87974901066e-07);
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][26] = exp(( -0.65 * var_membrane__V * 96485.3415) * 3.87974901066e-07);
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][27] = 3413921.875 * 3.38 * (1.0 + (0.1 * exp(( -0.65 * var_membrane__V * 96485.3415) * 3.87974901066e-07)));
        }
        
        for (int i=0 ; i<60001; i++)
        {
            double var_membrane__V = -250.0001 + i*0.01;
            _lookup_table_0[i][28] = 1.0 + exp((25.0 - var_membrane__V) * 0.167224080268);
        }
        
    }
    
private:
    /** The single instance of the class */
    static BackwardEulerTenTusscher2006_LookupTables *mpInstance;

    // Lookup tables
    double _lookup_table_0[60001][29];
    
};

BackwardEulerTenTusscher2006_LookupTables* BackwardEulerTenTusscher2006_LookupTables::mpInstance = NULL;

    double BackwardEulerTenTusscher2006::Get_membrane__i_Stim()
    {
        return var_membrane__i_Stim;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_K1()
    {
        return var_membrane__i_K1;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_to()
    {
        return var_membrane__i_to;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_Kr()
    {
        return var_membrane__i_Kr;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_Ks()
    {
        return var_membrane__i_Ks;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_CaL()
    {
        return var_membrane__i_CaL;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_NaK()
    {
        return var_membrane__i_NaK;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_Na()
    {
        return var_membrane__i_Na;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_b_Na()
    {
        return var_membrane__i_b_Na;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_NaCa()
    {
        return var_membrane__i_NaCa;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_b_Ca()
    {
        return var_membrane__i_b_Ca;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_p_K()
    {
        return var_membrane__i_p_K;
    }
    
    double BackwardEulerTenTusscher2006::Get_membrane__i_p_Ca()
    {
        return var_membrane__i_p_Ca;
    }
    
    BackwardEulerTenTusscher2006::BackwardEulerTenTusscher2006(boost::shared_ptr<AbstractIvpOdeSolver> /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractBackwardEulerCardiacCell<7>(
                19,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        // 
        mpSystemInfo = OdeSystemInformation<BackwardEulerTenTusscher2006>::Instance();
        Init();

    }
    
    BackwardEulerTenTusscher2006::~BackwardEulerTenTusscher2006()
    {
    }
    
    void BackwardEulerTenTusscher2006::VerifyStateVariables()
    {}

    double BackwardEulerTenTusscher2006::GetIIonic()
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_membrane__V = rY[0];
        // Units: millivolt; Initial value: -85.23
        double var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[1];
        // Units: dimensionless; Initial value: 0.00621
        double var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[2];
        // Units: dimensionless; Initial value: 0.4712
        double var_slow_time_dependent_potassium_current_Xs_gate__Xs = rY[3];
        // Units: dimensionless; Initial value: 0.0095
        double var_fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.00172
        double var_fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.7444
        double var_fast_sodium_current_j_gate__j = rY[6];
        // Units: dimensionless; Initial value: 0.7045
        double var_L_type_Ca_current_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 3.373e-5
        double var_L_type_Ca_current_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.7888
        double var_L_type_Ca_current_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.9755
        double var_L_type_Ca_current_fCass_gate__fCass = rY[10];
        // Units: dimensionless; Initial value: 0.9953
        double var_transient_outward_current_s_gate__s = rY[11];
        // Units: dimensionless; Initial value: 0.999998
        double var_transient_outward_current_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 2.42e-8
        double var_calcium_dynamics__Ca_i = rY[13];
        // Units: millimolar; Initial value: 0.000126
        double var_calcium_dynamics__Ca_ss = rY[15];
        // Units: millimolar; Initial value: 0.00036
        double var_sodium_dynamics__Na_i = rY[17];
        // Units: millimolar; Initial value: 8.604
        double var_potassium_dynamics__K_i = rY[18];
        // Units: millimolar; Initial value: 136.89
        
        // Lookup table indexing
        if (var_membrane__V>349.9999 || var_membrane__V<-250.0001)
        {
#define COVERAGE_IGNORE
            EXCEPTION(DumpState("V outside lookup table range", rY));
#undef COVERAGE_IGNORE
        }
        
        double _offset_0 = var_membrane__V - -250.0001;
        double _offset_0_over_table_step = _offset_0 * 100.0;
        _table_index_0 = (unsigned)(_offset_0_over_table_step);
        _factor_0 = _offset_0_over_table_step - _table_index_0;
        
        const double var_reversal_potentials__E_K = 26.7137606597 * log(5.4 / var_potassium_dynamics__K_i);
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.1 / (1.0 + exp(0.06 * ((var_membrane__V - var_reversal_potentials__E_K) - 200.0)));
        const double var_inward_rectifier_potassium_current__i_K1 = 5.405 * (var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + (((3.0 * exp(0.0002 * ((var_membrane__V - var_reversal_potentials__E_K) + 100.0))) + exp(0.1 * ((var_membrane__V - var_reversal_potentials__E_K) - 10.0))) / (1.0 + exp( -0.5 * (var_membrane__V - var_reversal_potentials__E_K)))))) * (var_membrane__V - var_reversal_potentials__E_K);
        var_membrane__i_K1 = var_inward_rectifier_potassium_current__i_K1;
        const double var_transient_outward_current__i_to = 0.294 * var_transient_outward_current_r_gate__r * var_transient_outward_current_s_gate__s * (var_membrane__V - var_reversal_potentials__E_K);
        var_membrane__i_to = var_transient_outward_current__i_to;
        const double var_rapid_time_dependent_potassium_current__i_Kr = 0.153 * 1.0 * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_membrane__V - var_reversal_potentials__E_K);
        var_membrane__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr;
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.392 * pow(var_slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_membrane__V - (26.7137606597 * log(9.6 / (var_potassium_dynamics__K_i + (0.03 * var_sodium_dynamics__Na_i)))));
        var_membrane__i_Ks = var_slow_time_dependent_potassium_current__i_Ks;
        const double var_L_type_Ca_current__i_CaL = (((3.98e-05 * var_L_type_Ca_current_d_gate__d * var_L_type_Ca_current_f_gate__f * var_L_type_Ca_current_f2_gate__f2 * var_L_type_Ca_current_fCass_gate__fCass * 4.0 * (var_membrane__V - 15.0) * 9309421124.37) * 3.87974901066e-07) * ((0.25 * var_calcium_dynamics__Ca_ss * BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_12(_table_index_0, _factor_0)) - 2.0)) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_13(_table_index_0, _factor_0);
        var_membrane__i_CaL = var_L_type_Ca_current__i_CaL;
        const double var_sodium_potassium_pump_current__i_NaK = ((2.298375 * var_sodium_dynamics__Na_i) / (var_sodium_dynamics__Na_i + 40.0)) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_24(_table_index_0, _factor_0);
        var_membrane__i_NaK = var_sodium_potassium_pump_current__i_NaK;
        const double var_reversal_potentials__E_Na = 26.7137606597 * log(140.0 / var_sodium_dynamics__Na_i);
        const double var_fast_sodium_current__i_Na = 14.838 * pow(var_fast_sodium_current_m_gate__m, 3.0) * var_fast_sodium_current_h_gate__h * var_fast_sodium_current_j_gate__j * (var_membrane__V - var_reversal_potentials__E_Na);
        var_membrane__i_Na = var_fast_sodium_current__i_Na;
        const double var_sodium_background_current__i_b_Na = 0.00029 * (var_membrane__V - var_reversal_potentials__E_Na);
        var_membrane__i_b_Na = var_sodium_background_current__i_b_Na;
        const double var_sodium_calcium_exchanger_current__i_NaCa = (1000.0 * ((BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_25(_table_index_0, _factor_0) * pow(var_sodium_dynamics__Na_i, 3.0) * 2.0) - (BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_26(_table_index_0, _factor_0) * 2744000.0 * var_calcium_dynamics__Ca_i * 2.5))) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_27(_table_index_0, _factor_0);
        var_membrane__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa;
        const double var_calcium_background_current__i_b_Ca = 0.000592 * (var_membrane__V - (13.3568803298 * log(2.0 / var_calcium_dynamics__Ca_i)));
        var_membrane__i_b_Ca = var_calcium_background_current__i_b_Ca;
        const double var_potassium_pump_current__i_p_K = (0.0146 * (var_membrane__V - var_reversal_potentials__E_K)) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_28(_table_index_0, _factor_0);
        var_membrane__i_p_K = var_potassium_pump_current__i_p_K;
        const double var_calcium_pump_current__i_p_Ca = (0.1238 * var_calcium_dynamics__Ca_i) / (var_calcium_dynamics__Ca_i + 0.0005);
        var_membrane__i_p_Ca = var_calcium_pump_current__i_p_Ca;
        
        double i_ionic =  (var_membrane__i_K1+var_membrane__i_to+var_membrane__i_Kr+var_membrane__i_Ks+var_membrane__i_CaL+var_membrane__i_NaK+var_membrane__i_Na+var_membrane__i_b_Na+var_membrane__i_NaCa+var_membrane__i_b_Ca+var_membrane__i_p_K+var_membrane__i_p_Ca);
        
        double i_ionic_in_microA_per_cm2=i_ionic*1.0;
        return i_ionic_in_microA_per_cm2;
    
         /*   i_ionic for this model is in pA/pF.
         *    Please note that in the mono/bidomain formulation, i_ionic needs to be in microA/cm2.
         *    We then need to divide by the cell capacitance.
         *    The cell capacitance of the tenTusscher model is
         *    2.0 uF/cm2 in the paper
         *    0.185 uF/cm2 in this code (membrane_C)
         *    1.0 uF/cm2 in the EvaluateRhsDerivatives method above
         *
         *    For consistency, we choose the last option.
         *    i_ion*pow(10,-6) will be in microA/pF.
         *    Cm*pow(10,6) will be in pF/cm2.
         *    i_ion*pow(10,-6)*Cm*pow(10,6) = i_ion*Cm is in microA/cm2, the correct units
         */
    }
    
    void BackwardEulerTenTusscher2006::ComputeResidual(const double rCurrentGuess[7], double rResidual[7])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_membrane__V = rY[0];
        // Units: millivolt; Initial value: -85.23
        double var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[1];
        // Units: dimensionless; Initial value: 0.00621
        double var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[2];
        // Units: dimensionless; Initial value: 0.4712
        double var_slow_time_dependent_potassium_current_Xs_gate__Xs = rY[3];
        // Units: dimensionless; Initial value: 0.0095
        double var_fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.00172
        double var_fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.7444
        double var_fast_sodium_current_j_gate__j = rY[6];
        // Units: dimensionless; Initial value: 0.7045
        double var_L_type_Ca_current_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 3.373e-5
        double var_L_type_Ca_current_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.7888
        double var_L_type_Ca_current_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.9755
        double var_transient_outward_current_s_gate__s = rY[11];
        // Units: dimensionless; Initial value: 0.999998
        double var_transient_outward_current_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 2.42e-8
        
        double var_L_type_Ca_current_fCass_gate__fCass = rCurrentGuess[0];
        double var_calcium_dynamics__Ca_SR = rCurrentGuess[1];
        double var_calcium_dynamics__Ca_i = rCurrentGuess[2];
        double var_calcium_dynamics__Ca_ss = rCurrentGuess[3];
        double var_calcium_dynamics__R_prime = rCurrentGuess[4];
        double var_potassium_dynamics__K_i = rCurrentGuess[5];
        double var_sodium_dynamics__Na_i = rCurrentGuess[6];
        
        const double var_reversal_potentials__E_K = 26.7137606597 * log(5.4 / var_potassium_dynamics__K_i);
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.1 / (1.0 + exp(0.06 * ((var_membrane__V - var_reversal_potentials__E_K) - 200.0)));
        const double var_inward_rectifier_potassium_current__i_K1 = 5.405 * (var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + (((3.0 * exp(0.0002 * ((var_membrane__V - var_reversal_potentials__E_K) + 100.0))) + exp(0.1 * ((var_membrane__V - var_reversal_potentials__E_K) - 10.0))) / (1.0 + exp( -0.5 * (var_membrane__V - var_reversal_potentials__E_K)))))) * (var_membrane__V - var_reversal_potentials__E_K);
        const double var_transient_outward_current__i_to = 0.294 * var_transient_outward_current_r_gate__r * var_transient_outward_current_s_gate__s * (var_membrane__V - var_reversal_potentials__E_K);
        const double var_rapid_time_dependent_potassium_current__i_Kr = 0.153 * 1.0 * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_membrane__V - var_reversal_potentials__E_K);
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.392 * pow(var_slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_membrane__V - (26.7137606597 * log(9.6 / (var_potassium_dynamics__K_i + (0.03 * var_sodium_dynamics__Na_i)))));
        const double var_L_type_Ca_current__i_CaL = (((3.98e-05 * var_L_type_Ca_current_d_gate__d * var_L_type_Ca_current_f_gate__f * var_L_type_Ca_current_f2_gate__f2 * var_L_type_Ca_current_fCass_gate__fCass * 4.0 * (var_membrane__V - 15.0) * 9309421124.37) * 3.87974901066e-07) * ((0.25 * var_calcium_dynamics__Ca_ss * BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_12(_table_index_0, _factor_0)) - 2.0)) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_13(_table_index_0, _factor_0);
        const double var_sodium_potassium_pump_current__i_NaK = ((2.298375 * var_sodium_dynamics__Na_i) / (var_sodium_dynamics__Na_i + 40.0)) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_24(_table_index_0, _factor_0);
        const double var_reversal_potentials__E_Na = 26.7137606597 * log(140.0 / var_sodium_dynamics__Na_i);
        const double var_fast_sodium_current__i_Na = 14.838 * pow(var_fast_sodium_current_m_gate__m, 3.0) * var_fast_sodium_current_h_gate__h * var_fast_sodium_current_j_gate__j * (var_membrane__V - var_reversal_potentials__E_Na);
        const double var_sodium_background_current__i_b_Na = 0.00029 * (var_membrane__V - var_reversal_potentials__E_Na);
        const double var_sodium_calcium_exchanger_current__i_NaCa = (1000.0 * ((BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_25(_table_index_0, _factor_0) * pow(var_sodium_dynamics__Na_i, 3.0) * 2.0) - (BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_26(_table_index_0, _factor_0) * 2744000.0 * var_calcium_dynamics__Ca_i * 2.5))) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_27(_table_index_0, _factor_0);
        const double var_calcium_background_current__i_b_Ca = 0.000592 * (var_membrane__V - (13.3568803298 * log(2.0 / var_calcium_dynamics__Ca_i)));
        const double var_potassium_pump_current__i_p_K = (0.0146 * (var_membrane__V - var_reversal_potentials__E_K)) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_28(_table_index_0, _factor_0);
        const double var_calcium_pump_current__i_p_Ca = (0.1238 * var_calcium_dynamics__Ca_i) / (var_calcium_dynamics__Ca_i + 0.0005);
        const double var_calcium_dynamics__kcasr = 2.5 - (1.5 / (1.0 + pow(1.5 / var_calcium_dynamics__Ca_SR, 2.0)));
        const double var_calcium_dynamics__k1 = 0.15 / var_calcium_dynamics__kcasr;
        const double var_calcium_dynamics__i_rel = 0.102 * ((var_calcium_dynamics__k1 * pow(var_calcium_dynamics__Ca_ss, 2.0) * var_calcium_dynamics__R_prime) / (0.06 + (var_calcium_dynamics__k1 * pow(var_calcium_dynamics__Ca_ss, 2.0)))) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss);
        const double var_calcium_dynamics__i_up = 0.006375 / (1.0 + (6.25e-08 / pow(var_calcium_dynamics__Ca_i, 2.0)));
        const double var_calcium_dynamics__i_leak = 0.00036 * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_i);
        const double var_calcium_dynamics__i_xfer = 0.0038 * (var_calcium_dynamics__Ca_ss - var_calcium_dynamics__Ca_i);
        const double d_dt_L_type_Ca_current_fCass_gate__fCass = (((0.6 / (1.0 + pow(var_calcium_dynamics__Ca_ss * 20.0, 2.0))) + 0.4) - var_L_type_Ca_current_fCass_gate__fCass) / ((80.0 / (1.0 + pow(var_calcium_dynamics__Ca_ss * 20.0, 2.0))) + 2.0);
        const double d_dt_calcium_dynamics__R_prime = ((-(0.045 * var_calcium_dynamics__kcasr)) * var_calcium_dynamics__Ca_ss * var_calcium_dynamics__R_prime) + (0.005 * (1.0 - var_calcium_dynamics__R_prime));
        const double d_dt_calcium_dynamics__Ca_i = (1.0 / (1.0 + (0.0002 / pow(var_calcium_dynamics__Ca_i + 0.001, 2.0)))) * (((((var_calcium_dynamics__i_leak - var_calcium_dynamics__i_up) * 0.001094) * 60.9607412826) + var_calcium_dynamics__i_xfer) - ((((var_calcium_background_current__i_b_Ca + var_calcium_pump_current__i_p_Ca) - (2.0 * var_sodium_calcium_exchanger_current__i_NaCa)) * 0.185) * 0.000315906749849));
        const double d_dt_calcium_dynamics__Ca_SR = (1.0 / (1.0 + (3.0 / pow(var_calcium_dynamics__Ca_SR + 0.3, 2.0)))) * (var_calcium_dynamics__i_up - (var_calcium_dynamics__i_rel + var_calcium_dynamics__i_leak));
        const double d_dt_calcium_dynamics__Ca_ss = (1.0 / (1.0 + (0.0001 / pow(var_calcium_dynamics__Ca_ss + 0.00025, 2.0)))) * (((((-var_L_type_Ca_current__i_CaL) * 0.185) * 0.0947720249546) + ((var_calcium_dynamics__i_rel * 0.001094) * 18288.2223848)) - ((var_calcium_dynamics__i_xfer * 0.016404) * 18288.2223848));
        const double d_dt_sodium_dynamics__Na_i = ((-(var_fast_sodium_current__i_Na + var_sodium_background_current__i_b_Na + (3.0 * var_sodium_potassium_pump_current__i_NaK) + (3.0 * var_sodium_calcium_exchanger_current__i_NaCa))) * 0.000631813499697) * 0.185;
        const double d_dt_potassium_dynamics__K_i = ((-((var_inward_rectifier_potassium_current__i_K1 + var_transient_outward_current__i_to + var_rapid_time_dependent_potassium_current__i_Kr + var_slow_time_dependent_potassium_current__i_Ks + var_potassium_pump_current__i_p_K + var_membrane__i_Stim) - (2.0 * var_sodium_potassium_pump_current__i_NaK))) * 0.000631813499697) * 0.185;
        
        rResidual[0] = rCurrentGuess[0] - rY[10] - mDt*1.0*d_dt_L_type_Ca_current_fCass_gate__fCass;
        rResidual[2] = rCurrentGuess[2] - rY[13] - mDt*1.0*d_dt_calcium_dynamics__Ca_i;
        rResidual[1] = rCurrentGuess[1] - rY[14] - mDt*1.0*d_dt_calcium_dynamics__Ca_SR;
        rResidual[3] = rCurrentGuess[3] - rY[15] - mDt*1.0*d_dt_calcium_dynamics__Ca_ss;
        rResidual[4] = rCurrentGuess[4] - rY[16] - mDt*1.0*d_dt_calcium_dynamics__R_prime;
        rResidual[6] = rCurrentGuess[6] - rY[17] - mDt*1.0*d_dt_sodium_dynamics__Na_i;
        rResidual[5] = rCurrentGuess[5] - rY[18] - mDt*1.0*d_dt_potassium_dynamics__K_i;
    }
    
    void BackwardEulerTenTusscher2006::ComputeJacobian(const double rCurrentGuess[7], double rJacobian[7][7])
    {
        std::vector<double>& rY = rGetStateVariables();
        double var_membrane__V = rY[0];
        // Units: millivolt; Initial value: -85.23
        double var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[1];
        // Units: dimensionless; Initial value: 0.00621
        double var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[2];
        // Units: dimensionless; Initial value: 0.4712
        double var_slow_time_dependent_potassium_current_Xs_gate__Xs = rY[3];
        // Units: dimensionless; Initial value: 0.0095
        double var_fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.00172
        double var_fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.7444
        double var_fast_sodium_current_j_gate__j = rY[6];
        // Units: dimensionless; Initial value: 0.7045
        double var_L_type_Ca_current_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 3.373e-5
        double var_L_type_Ca_current_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.7888
        double var_L_type_Ca_current_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.9755
        double var_transient_outward_current_s_gate__s = rY[11];
        // Units: dimensionless; Initial value: 0.999998
        double var_transient_outward_current_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 2.42e-8
        
        double var_L_type_Ca_current_fCass_gate__fCass = rCurrentGuess[0];
        double var_calcium_dynamics__Ca_SR = rCurrentGuess[1];
        double var_calcium_dynamics__Ca_i = rCurrentGuess[2];
        double var_calcium_dynamics__Ca_ss = rCurrentGuess[3];
        double var_calcium_dynamics__R_prime = rCurrentGuess[4];
        double var_potassium_dynamics__K_i = rCurrentGuess[5];
        double var_sodium_dynamics__Na_i = rCurrentGuess[6];
        
        const double dt = 1.0 * mDt;

        
        rJacobian[0][0] = 1.0 + (dt / ((80.0 / (1.0 + (400.0 * pow(var_calcium_dynamics__Ca_ss, 2.0)))) + 2.0));
        rJacobian[0][1] = 0.0;
        rJacobian[0][2] = 0.0;
        rJacobian[0][3] = ((((480.0 * dt) / pow(1.0 + (400.0 * pow(var_calcium_dynamics__Ca_ss, 2.0)), 2.0)) * var_calcium_dynamics__Ca_ss) / ((80.0 / (1.0 + (400.0 * pow(var_calcium_dynamics__Ca_ss, 2.0)))) + 2.0)) - (((((64000.0 * dt) * (((0.6 / (1.0 + (400.0 * pow(var_calcium_dynamics__Ca_ss, 2.0)))) + 0.4) - var_L_type_Ca_current_fCass_gate__fCass)) / pow((80.0 / (1.0 + (400.0 * pow(var_calcium_dynamics__Ca_ss, 2.0)))) + 2.0, 2.0)) / pow(1.0 + (400.0 * pow(var_calcium_dynamics__Ca_ss, 2.0)), 2.0)) * var_calcium_dynamics__Ca_ss);
        rJacobian[0][4] = 0.0;
        rJacobian[0][5] = 0.0;
        rJacobian[0][6] = 0.0;
        rJacobian[1][0] = 0.0;
        rJacobian[1][1] = (1.0 - ((((6.0 * dt) / pow(1.0 + (3.0 / pow(var_calcium_dynamics__Ca_SR + 0.3, 2.0)), 2.0)) * ((((0.006375 / (1.0 + (6.25e-08 / pow(var_calcium_dynamics__Ca_i, 2.0)))) - (((((0.0153 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss))) - (0.00036 * var_calcium_dynamics__Ca_SR)) + (0.00036 * var_calcium_dynamics__Ca_i))) / pow(var_calcium_dynamics__Ca_SR + 0.3, 3.0))) - ((dt / (1.0 + (3.0 / pow(var_calcium_dynamics__Ca_SR + 0.3, 2.0)))) * (((((((((((-0.103275) / pow(2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))), 2.0)) * pow(var_calcium_dynamics__Ca_ss, 2.0)) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss)) / pow(1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)), 2.0)) / pow(var_calcium_dynamics__Ca_SR, 3.0)) + (((((((0.01549125 / pow(2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))), 3.0)) * pow(var_calcium_dynamics__Ca_ss, 4.0)) * var_calcium_dynamics__R_prime) / pow(0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)), 2.0)) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss)) / pow(1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)), 2.0)) / pow(var_calcium_dynamics__Ca_SR, 3.0))) - ((((0.0153 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0))))) - 0.00036));
        rJacobian[1][2] = ((-dt) / (1.0 + (3.0 / pow(var_calcium_dynamics__Ca_SR + 0.3, 2.0)))) * (((7.96875e-10 / pow(1.0 + (6.25e-08 / pow(var_calcium_dynamics__Ca_i, 2.0)), 2.0)) / pow(var_calcium_dynamics__Ca_i, 3.0)) + 0.00036);
        rJacobian[1][3] = ((-dt) / (1.0 + (3.0 / pow(var_calcium_dynamics__Ca_SR + 0.3, 2.0)))) * ((((((((-0.0306) / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * var_calcium_dynamics__Ca_ss) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss)) + (((((0.00459 / pow(2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))), 2.0)) * pow(var_calcium_dynamics__Ca_ss, 3.0)) * var_calcium_dynamics__R_prime) / pow(0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)), 2.0)) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss))) + ((((0.0153 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))));
        rJacobian[1][4] = (((((0.0153 * dt) / (1.0 + (3.0 / pow(var_calcium_dynamics__Ca_SR + 0.3, 2.0)))) / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss);
        rJacobian[1][5] = 0.0;
        rJacobian[1][6] = 0.0;
        rJacobian[2][0] = 0.0;
        rJacobian[2][1] = ((-2.400877835e-05) * dt) / (1.0 + (0.0002 / pow(var_calcium_dynamics__Ca_i + 0.001, 2.0)));
        rJacobian[2][2] = (1.0 - ((((0.0004 * dt) / pow(1.0 + (0.0002 / pow(var_calcium_dynamics__Ca_i + 0.001, 2.0)), 2.0)) * ((((((((2.400877835e-05 * var_calcium_dynamics__Ca_SR) - (0.003824008778 * var_calcium_dynamics__Ca_i)) - (0.0004251554499 / (1.0 + (6.25e-08 / pow(var_calcium_dynamics__Ca_i, 2.0))))) + (0.0038 * var_calcium_dynamics__Ca_ss)) - (3.459810726e-08 * var_membrane__V)) + (4.621227783e-07 * log(2.0 / var_calcium_dynamics__Ca_i))) - ((7.235212295e-06 * var_calcium_dynamics__Ca_i) / (var_calcium_dynamics__Ca_i + 0.0005))) + ((1.012955463e-08 * (((2.0 * exp(0.01310186179 * var_membrane__V)) * pow(var_sodium_dynamics__Na_i, 3.0)) - ((6860000.0 * exp((-0.02433202904) * var_membrane__V)) * var_calcium_dynamics__Ca_i))) / (1.0 + (0.1 * exp((-0.02433202904) * var_membrane__V)))))) / pow(var_calcium_dynamics__Ca_i + 0.001, 3.0))) - ((dt / (1.0 + (0.0002 / pow(var_calcium_dynamics__Ca_i + 0.001, 2.0)))) * ((((((-0.003824008778) - ((5.314443124e-11 / pow(1.0 + (6.25e-08 / pow(var_calcium_dynamics__Ca_i, 2.0)), 2.0)) / pow(var_calcium_dynamics__Ca_i, 3.0))) - (4.621227783e-07 / var_calcium_dynamics__Ca_i)) - (7.235212295e-06 / (var_calcium_dynamics__Ca_i + 0.0005))) + ((7.235212295e-06 * var_calcium_dynamics__Ca_i) / pow(var_calcium_dynamics__Ca_i + 0.0005, 2.0))) - ((0.06948874476 * exp((-0.02433202904) * var_membrane__V)) / (1.0 + (0.1 * exp((-0.02433202904) * var_membrane__V))))));
        rJacobian[2][3] = ((-0.0038) * dt) / (1.0 + (0.0002 / pow(var_calcium_dynamics__Ca_i + 0.001, 2.0)));
        rJacobian[2][4] = 0.0;
        rJacobian[2][5] = 0.0;
        rJacobian[2][6] = (((((-6.077732778e-08) * dt) / (1.0 + (0.0002 / pow(var_calcium_dynamics__Ca_i + 0.001, 2.0)))) * exp(0.01310186179 * var_membrane__V)) * pow(var_sodium_dynamics__Na_i, 2.0)) / (1.0 + (0.1 * exp((-0.02433202904) * var_membrane__V)));
        rJacobian[3][0] = (((((((0.01008140958 * dt) / (1.0 + (0.0001 / pow(var_calcium_dynamics__Ca_ss + 0.00025, 2.0)))) * var_L_type_Ca_current_d_gate__d) * var_L_type_Ca_current_f_gate__f) * var_L_type_Ca_current_f2_gate__f2) * (var_membrane__V - 15.0)) * (((0.25 * var_calcium_dynamics__Ca_ss) * exp((0.07486778168 * var_membrane__V) - 1.123016725)) - 2.0)) / (exp((0.07486778168 * var_membrane__V) - 1.123016725) - 1.0);
        rJacobian[3][1] = ((-dt) / (1.0 + (0.0001 / pow(var_calcium_dynamics__Ca_ss + 0.00025, 2.0)))) * (((((((((2.066255486 / pow(2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))), 2.0)) * pow(var_calcium_dynamics__Ca_ss, 2.0)) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss)) / pow(1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)), 2.0)) / pow(var_calcium_dynamics__Ca_SR, 3.0)) - (((((((0.3099383229 / pow(2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))), 3.0)) * pow(var_calcium_dynamics__Ca_ss, 4.0)) * var_calcium_dynamics__R_prime) / pow(0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)), 2.0)) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss)) / pow(1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)), 2.0)) / pow(var_calcium_dynamics__Ca_SR, 3.0))) + ((((0.3061119239 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))));
        rJacobian[3][2] = ((-1.14) * dt) / (1.0 + (0.0001 / pow(var_calcium_dynamics__Ca_ss + 0.00025, 2.0)));
        rJacobian[3][3] = (1.0 - ((((0.0002 * dt) / pow(1.0 + (0.0001 / pow(var_calcium_dynamics__Ca_ss + 0.00025, 2.0)), 2.0)) * (((((((((((-0.01008140958) * var_L_type_Ca_current_d_gate__d) * var_L_type_Ca_current_f_gate__f) * var_L_type_Ca_current_f2_gate__f2) * var_L_type_Ca_current_fCass_gate__fCass) * (var_membrane__V - 15.0)) * (((0.25 * var_calcium_dynamics__Ca_ss) * exp((0.07486778168 * var_membrane__V) - 1.123016725)) - 2.0)) / (exp((0.07486778168 * var_membrane__V) - 1.123016725) - 1.0)) + (((((0.3061119239 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss))) - (1.14 * var_calcium_dynamics__Ca_ss)) + (1.14 * var_calcium_dynamics__Ca_i))) / pow(var_calcium_dynamics__Ca_ss + 0.00025, 3.0))) - ((dt / (1.0 + (0.0001 / pow(var_calcium_dynamics__Ca_ss + 0.00025, 2.0)))) * ((((((((((((-0.002520352395) * var_L_type_Ca_current_d_gate__d) * var_L_type_Ca_current_f_gate__f) * var_L_type_Ca_current_f2_gate__f2) * var_L_type_Ca_current_fCass_gate__fCass) * (var_membrane__V - 15.0)) * exp((0.07486778168 * var_membrane__V) - 1.123016725)) / (exp((0.07486778168 * var_membrane__V) - 1.123016725) - 1.0)) + (((((0.6122238478 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * var_calcium_dynamics__Ca_ss) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss))) - (((((0.09183357717 / pow(2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))), 2.0)) * pow(var_calcium_dynamics__Ca_ss, 3.0)) * var_calcium_dynamics__R_prime) / pow(0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)), 2.0)) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss))) - ((((0.3061119239 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)) * var_calcium_dynamics__R_prime) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0))))) - 1.14));
        rJacobian[3][4] = ((((((-0.3061119239) * dt) / (1.0 + (0.0001 / pow(var_calcium_dynamics__Ca_ss + 0.00025, 2.0)))) / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)) / (0.06 + ((0.15 / (2.5 - (1.5 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * pow(var_calcium_dynamics__Ca_ss, 2.0)))) * (var_calcium_dynamics__Ca_SR - var_calcium_dynamics__Ca_ss);
        rJacobian[3][5] = 0.0;
        rJacobian[3][6] = 0.0;
        rJacobian[4][0] = 0.0;
        rJacobian[4][1] = (((((-0.30375) * dt) / pow(1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)), 2.0)) / pow(var_calcium_dynamics__Ca_SR, 3.0)) * var_calcium_dynamics__Ca_ss) * var_calcium_dynamics__R_prime;
        rJacobian[4][2] = 0.0;
        rJacobian[4][3] = (dt * (0.1125 - (0.0675 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * var_calcium_dynamics__R_prime;
        rJacobian[4][4] = 1.0 - (dt * (((-(0.1125 - (0.0675 / (1.0 + (2.25 / pow(var_calcium_dynamics__Ca_SR, 2.0)))))) * var_calcium_dynamics__Ca_ss) - 0.005));
        rJacobian[4][5] = 0.0;
        rJacobian[4][6] = 0.0;
        rJacobian[5][0] = 0.0;
        rJacobian[5][1] = 0.0;
        rJacobian[5][2] = 0.0;
        rJacobian[5][3] = 0.0;
        rJacobian[5][4] = 0.0;
        rJacobian[5][5] = 1.0 - (dt * (((((((((((0.0001012610925 / pow(1.0 + exp(((0.06 * var_membrane__V) - (1.60282564 * log(5.4 / var_potassium_dynamics__K_i))) - 12.0), 2.0)) / ((0.1 / (1.0 + exp(((0.06 * var_membrane__V) - (1.60282564 * log(5.4 / var_potassium_dynamics__K_i))) - 12.0))) + (((3.0 * exp(((0.0002 * var_membrane__V) - (0.005342752132 * log(5.4 / var_potassium_dynamics__K_i))) + 0.02)) + exp(((0.1 * var_membrane__V) - (2.671376066 * log(5.4 / var_potassium_dynamics__K_i))) - 1.0)) / (1.0 + exp(((-0.5) * var_membrane__V) + (13.35688033 * log(5.4 / var_potassium_dynamics__K_i))))))) * (var_membrane__V - (26.71376066 * log(5.4 / var_potassium_dynamics__K_i)))) / var_potassium_dynamics__K_i) * exp(((0.06 * var_membrane__V) - (1.60282564 * log(5.4 / var_potassium_dynamics__K_i))) - 12.0)) + ((((6.317661134e-05 / (1.0 + exp(((0.06 * var_membrane__V) - (1.60282564 * log(5.4 / var_potassium_dynamics__K_i))) - 12.0))) / pow((0.1 / (1.0 + exp(((0.06 * var_membrane__V) - (1.60282564 * log(5.4 / var_potassium_dynamics__K_i))) - 12.0))) + (((3.0 * exp(((0.0002 * var_membrane__V) - (0.005342752132 * log(5.4 / var_potassium_dynamics__K_i))) + 0.02)) + exp(((0.1 * var_membrane__V) - (2.671376066 * log(5.4 / var_potassium_dynamics__K_i))) - 1.0)) / (1.0 + exp(((-0.5) * var_membrane__V) + (13.35688033 * log(5.4 / var_potassium_dynamics__K_i))))), 2.0)) * (var_membrane__V - (26.71376066 * log(5.4 / var_potassium_dynamics__K_i)))) * ((((((-0.160282564) / pow(1.0 + exp(((0.06 * var_membrane__V) - (1.60282564 * log(5.4 / var_potassium_dynamics__K_i))) - 12.0), 2.0)) / var_potassium_dynamics__K_i) * exp(((0.06 * var_membrane__V) - (1.60282564 * log(5.4 / var_potassium_dynamics__K_i))) - 12.0)) + ((((0.0160282564 / var_potassium_dynamics__K_i) * exp(((0.0002 * var_membrane__V) - (0.005342752132 * log(5.4 / var_potassium_dynamics__K_i))) + 0.02)) + ((2.671376066 / var_potassium_dynamics__K_i) * exp(((0.1 * var_membrane__V) - (2.671376066 * log(5.4 / var_potassium_dynamics__K_i))) - 1.0))) / (1.0 + exp(((-0.5) * var_membrane__V) + (13.35688033 * log(5.4 / var_potassium_dynamics__K_i)))))) + ((((13.35688033 * ((3.0 * exp(((0.0002 * var_membrane__V) - (0.005342752132 * log(5.4 / var_potassium_dynamics__K_i))) + 0.02)) + exp(((0.1 * var_membrane__V) - (2.671376066 * log(5.4 / var_potassium_dynamics__K_i))) - 1.0))) / pow(1.0 + exp(((-0.5) * var_membrane__V) + (13.35688033 * log(5.4 / var_potassium_dynamics__K_i))), 2.0)) / var_potassium_dynamics__K_i) * exp(((-0.5) * var_membrane__V) + (13.35688033 * log(5.4 / var_potassium_dynamics__K_i))))))) - (((0.001687684875 / (1.0 + exp(((0.06 * var_membrane__V) - (1.60282564 * log(5.4 / var_potassium_dynamics__K_i))) - 12.0))) / ((0.1 / (1.0 + exp(((0.06 * var_membrane__V) - (1.60282564 * log(5.4 / var_potassium_dynamics__K_i))) - 12.0))) + (((3.0 * exp(((0.0002 * var_membrane__V) - (0.005342752132 * log(5.4 / var_potassium_dynamics__K_i))) + 0.02)) + exp(((0.1 * var_membrane__V) - (2.671376066 * log(5.4 / var_potassium_dynamics__K_i))) - 1.0)) / (1.0 + exp(((-0.5) * var_membrane__V) + (13.35688033 * log(5.4 / var_potassium_dynamics__K_i))))))) / var_potassium_dynamics__K_i)) - (((0.0009180006536 * var_transient_outward_current_r_gate__r) * var_transient_outward_current_s_gate__s) / var_potassium_dynamics__K_i)) - (((0.0004777350339 * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1) * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2) / var_potassium_dynamics__K_i)) - ((0.001224000871 * pow(var_slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0)) / (var_potassium_dynamics__K_i + (0.03 * var_sodium_dynamics__Na_i)))) - ((4.558778755e-05 / var_potassium_dynamics__K_i) / (1.0 + exp(4.180602008 - (0.1672240803 * var_membrane__V))))));
        rJacobian[5][6] = (-dt) * (((((-3.672002614e-05) * pow(var_slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0)) / (var_potassium_dynamics__K_i + (0.03 * var_sodium_dynamics__Na_i))) + ((0.0005372934102 / (var_sodium_dynamics__Na_i + 40.0)) / ((1.0 + (0.1245 * exp((-0.003743389084) * var_membrane__V))) + (0.0353 * exp((-0.03743389084) * var_membrane__V))))) - (((0.0005372934102 * var_sodium_dynamics__Na_i) / pow(var_sodium_dynamics__Na_i + 40.0, 2.0)) / ((1.0 + (0.1245 * exp((-0.003743389084) * var_membrane__V))) + (0.0353 * exp((-0.03743389084) * var_membrane__V)))));
        rJacobian[6][0] = 0.0;
        rJacobian[6][1] = 0.0;
        rJacobian[6][2] = (((-0.2084662341) * dt) * exp((-0.02433202904) * var_membrane__V)) / (1.0 + (0.1 * exp((-0.02433202904) * var_membrane__V)));
        rJacobian[6][3] = 0.0;
        rJacobian[6][4] = 0.0;
        rJacobian[6][5] = 0.0;
        rJacobian[6][6] = 1.0 - (dt * (((((((((-0.04633093093) * pow(var_fast_sodium_current_m_gate__m, 3.0)) * var_fast_sodium_current_h_gate__h) * var_fast_sodium_current_j_gate__j) / var_sodium_dynamics__Na_i) - (9.055108486e-07 / var_sodium_dynamics__Na_i)) - ((0.0008059401153 / (var_sodium_dynamics__Na_i + 40.0)) / ((1.0 + (0.1245 * exp((-0.003743389084) * var_membrane__V))) + (0.0353 * exp((-0.03743389084) * var_membrane__V))))) + (((0.0008059401153 * var_sodium_dynamics__Na_i) / pow(var_sodium_dynamics__Na_i + 40.0, 2.0)) / ((1.0 + (0.1245 * exp((-0.003743389084) * var_membrane__V))) + (0.0353 * exp((-0.03743389084) * var_membrane__V))))) - (((1.823319832e-07 * exp(0.01310186179 * var_membrane__V)) * pow(var_sodium_dynamics__Na_i, 2.0)) / (1.0 + (0.1 * exp((-0.02433202904) * var_membrane__V))))));
    }
    
    void BackwardEulerTenTusscher2006::UpdateTransmembranePotential(double var_environment__time)
    {
        // Time units: millisecond
        var_environment__time *= 1.0;
        std::vector<double>& rY = rGetStateVariables();
        double var_membrane__V = rY[0];
        // Units: millivolt; Initial value: -85.23
        double var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 = rY[1];
        // Units: dimensionless; Initial value: 0.00621
        double var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 = rY[2];
        // Units: dimensionless; Initial value: 0.4712
        double var_slow_time_dependent_potassium_current_Xs_gate__Xs = rY[3];
        // Units: dimensionless; Initial value: 0.0095
        double var_fast_sodium_current_m_gate__m = rY[4];
        // Units: dimensionless; Initial value: 0.00172
        double var_fast_sodium_current_h_gate__h = rY[5];
        // Units: dimensionless; Initial value: 0.7444
        double var_fast_sodium_current_j_gate__j = rY[6];
        // Units: dimensionless; Initial value: 0.7045
        double var_L_type_Ca_current_d_gate__d = rY[7];
        // Units: dimensionless; Initial value: 3.373e-5
        double var_L_type_Ca_current_f_gate__f = rY[8];
        // Units: dimensionless; Initial value: 0.7888
        double var_L_type_Ca_current_f2_gate__f2 = rY[9];
        // Units: dimensionless; Initial value: 0.9755
        double var_L_type_Ca_current_fCass_gate__fCass = rY[10];
        // Units: dimensionless; Initial value: 0.9953
        double var_transient_outward_current_s_gate__s = rY[11];
        // Units: dimensionless; Initial value: 0.999998
        double var_transient_outward_current_r_gate__r = rY[12];
        // Units: dimensionless; Initial value: 2.42e-8
        double var_calcium_dynamics__Ca_i = rY[13];
        // Units: millimolar; Initial value: 0.000126
        double var_calcium_dynamics__Ca_ss = rY[15];
        // Units: millimolar; Initial value: 0.00036
        double var_sodium_dynamics__Na_i = rY[17];
        // Units: millimolar; Initial value: 8.604
        double var_potassium_dynamics__K_i = rY[18];
        // Units: millimolar; Initial value: 136.89
        
        // Lookup table indexing
        if (var_membrane__V>349.9999 || var_membrane__V<-250.0001)
        {
#define COVERAGE_IGNORE
            EXCEPTION(DumpState("V outside lookup table range", rY));
#undef COVERAGE_IGNORE
        }
        
        double _offset_0 = var_membrane__V - -250.0001;
        double _offset_0_over_table_step = _offset_0 * 100.0;
        _table_index_0 = (unsigned)(_offset_0_over_table_step);
        _factor_0 = _offset_0_over_table_step - _table_index_0;
        
        const double var_reversal_potentials__E_K = 26.7137606597 * log(5.4 / var_potassium_dynamics__K_i);
        const double var_inward_rectifier_potassium_current__alpha_K1 = 0.1 / (1.0 + exp(0.06 * ((var_membrane__V - var_reversal_potentials__E_K) - 200.0)));
        const double var_inward_rectifier_potassium_current__i_K1 = 5.405 * (var_inward_rectifier_potassium_current__alpha_K1 / (var_inward_rectifier_potassium_current__alpha_K1 + (((3.0 * exp(0.0002 * ((var_membrane__V - var_reversal_potentials__E_K) + 100.0))) + exp(0.1 * ((var_membrane__V - var_reversal_potentials__E_K) - 10.0))) / (1.0 + exp( -0.5 * (var_membrane__V - var_reversal_potentials__E_K)))))) * (var_membrane__V - var_reversal_potentials__E_K);
        var_membrane__i_K1 = var_inward_rectifier_potassium_current__i_K1;
        const double var_transient_outward_current__i_to = 0.294 * var_transient_outward_current_r_gate__r * var_transient_outward_current_s_gate__s * (var_membrane__V - var_reversal_potentials__E_K);
        var_membrane__i_to = var_transient_outward_current__i_to;
        const double var_rapid_time_dependent_potassium_current__i_Kr = 0.153 * 1.0 * var_rapid_time_dependent_potassium_current_Xr1_gate__Xr1 * var_rapid_time_dependent_potassium_current_Xr2_gate__Xr2 * (var_membrane__V - var_reversal_potentials__E_K);
        var_membrane__i_Kr = var_rapid_time_dependent_potassium_current__i_Kr;
        const double var_slow_time_dependent_potassium_current__i_Ks = 0.392 * pow(var_slow_time_dependent_potassium_current_Xs_gate__Xs, 2.0) * (var_membrane__V - (26.7137606597 * log(9.6 / (var_potassium_dynamics__K_i + (0.03 * var_sodium_dynamics__Na_i)))));
        var_membrane__i_Ks = var_slow_time_dependent_potassium_current__i_Ks;
        const double var_L_type_Ca_current__i_CaL = (((3.98e-05 * var_L_type_Ca_current_d_gate__d * var_L_type_Ca_current_f_gate__f * var_L_type_Ca_current_f2_gate__f2 * var_L_type_Ca_current_fCass_gate__fCass * 4.0 * (var_membrane__V - 15.0) * 9309421124.37) * 3.87974901066e-07) * ((0.25 * var_calcium_dynamics__Ca_ss * BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_12(_table_index_0, _factor_0)) - 2.0)) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_13(_table_index_0, _factor_0);
        var_membrane__i_CaL = var_L_type_Ca_current__i_CaL;
        const double var_sodium_potassium_pump_current__i_NaK = ((2.298375 * var_sodium_dynamics__Na_i) / (var_sodium_dynamics__Na_i + 40.0)) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_24(_table_index_0, _factor_0);
        var_membrane__i_NaK = var_sodium_potassium_pump_current__i_NaK;
        const double var_reversal_potentials__E_Na = 26.7137606597 * log(140.0 / var_sodium_dynamics__Na_i);
        const double var_fast_sodium_current__i_Na = 14.838 * pow(var_fast_sodium_current_m_gate__m, 3.0) * var_fast_sodium_current_h_gate__h * var_fast_sodium_current_j_gate__j * (var_membrane__V - var_reversal_potentials__E_Na);
        var_membrane__i_Na = var_fast_sodium_current__i_Na;
        const double var_sodium_background_current__i_b_Na = 0.00029 * (var_membrane__V - var_reversal_potentials__E_Na);
        var_membrane__i_b_Na = var_sodium_background_current__i_b_Na;
        const double var_sodium_calcium_exchanger_current__i_NaCa = (1000.0 * ((BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_25(_table_index_0, _factor_0) * pow(var_sodium_dynamics__Na_i, 3.0) * 2.0) - (BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_26(_table_index_0, _factor_0) * 2744000.0 * var_calcium_dynamics__Ca_i * 2.5))) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_27(_table_index_0, _factor_0);
        var_membrane__i_NaCa = var_sodium_calcium_exchanger_current__i_NaCa;
        const double var_calcium_background_current__i_b_Ca = 0.000592 * (var_membrane__V - (13.3568803298 * log(2.0 / var_calcium_dynamics__Ca_i)));
        var_membrane__i_b_Ca = var_calcium_background_current__i_b_Ca;
        const double var_potassium_pump_current__i_p_K = (0.0146 * (var_membrane__V - var_reversal_potentials__E_K)) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_28(_table_index_0, _factor_0);
        var_membrane__i_p_K = var_potassium_pump_current__i_p_K;
        const double var_calcium_pump_current__i_p_Ca = (0.1238 * var_calcium_dynamics__Ca_i) / (var_calcium_dynamics__Ca_i + 0.0005);
        var_membrane__i_p_Ca = var_calcium_pump_current__i_p_Ca;
        double var_membrane__i_Stim = GetStimulus((1.0/1)*var_environment__time);
        
        double d_dt_membrane__V;
        if (mSetVoltageDerivativeToZero)
        {
            d_dt_membrane__V = 0.0;
        }
        else
        {
            d_dt_membrane__V =  -1.0 * (var_membrane__i_K1 + var_membrane__i_to + var_membrane__i_Kr + var_membrane__i_Ks + var_membrane__i_CaL + var_membrane__i_NaK + var_membrane__i_Na + var_membrane__i_b_Na + var_membrane__i_NaCa + var_membrane__i_b_Ca + var_membrane__i_p_K + var_membrane__i_p_Ca + var_membrane__i_Stim);
        }
        
        
        rY[0] += mDt * 1.0*d_dt_membrane__V;
    }
    
    void BackwardEulerTenTusscher2006::ComputeOneStepExceptVoltage(double var_environment__time)
    {
        // Time units: millisecond
        var_environment__time *= 1.0;
        std::vector<double>& rY = rGetStateVariables();
        double var_membrane__V = rY[0];
        // Units: millivolt; Initial value: -85.23
        
        // Lookup table indexing
        if (var_membrane__V>349.9999 || var_membrane__V<-250.0001)
        {
#define COVERAGE_IGNORE
            EXCEPTION(DumpState("V outside lookup table range", rY));
#undef COVERAGE_IGNORE
        }
        
        double _offset_0 = var_membrane__V - -250.0001;
        double _offset_0_over_table_step = _offset_0 * 100.0;
        _table_index_0 = (unsigned)(_offset_0_over_table_step);
        _factor_0 = _offset_0_over_table_step - _table_index_0;
        
        
        const double _g_0 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_14(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_15(_table_index_0, _factor_0);
        const double _h_0 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_15(_table_index_0, _factor_0);
        const double _g_1 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_18(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_19(_table_index_0, _factor_0);
        const double _h_1 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_19(_table_index_0, _factor_0);
        const double _g_2 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_16(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_17(_table_index_0, _factor_0);
        const double _h_2 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_17(_table_index_0, _factor_0);
        const double _g_3 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_8(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_9(_table_index_0, _factor_0);
        const double _h_3 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_9(_table_index_0, _factor_0);
        const double _g_4 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_10(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_11(_table_index_0, _factor_0);
        const double _h_4 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_11(_table_index_0, _factor_0);
        const double _g_5 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_6(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_7(_table_index_0, _factor_0);
        const double _h_5 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_7(_table_index_0, _factor_0);
        const double _g_6 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_0(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_1(_table_index_0, _factor_0);
        const double _h_6 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_1(_table_index_0, _factor_0);
        const double _g_7 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_2(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_3(_table_index_0, _factor_0);
        const double _h_7 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_3(_table_index_0, _factor_0);
        const double _g_8 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_4(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_5(_table_index_0, _factor_0);
        const double _h_8 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_5(_table_index_0, _factor_0);
        const double _g_9 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_22(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_23(_table_index_0, _factor_0);
        const double _h_9 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_23(_table_index_0, _factor_0);
        const double _g_10 = BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_20(_table_index_0, _factor_0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_21(_table_index_0, _factor_0);
        const double _h_10 = (-1.0) / BackwardEulerTenTusscher2006_LookupTables::Instance()->_lookup_21(_table_index_0, _factor_0);
        
        const double dt = mDt*1.0;
        rY[1] = (rY[1] + _g_6*dt) / (1 - _h_6*dt);
        rY[2] = (rY[2] + _g_7*dt) / (1 - _h_7*dt);
        rY[3] = (rY[3] + _g_8*dt) / (1 - _h_8*dt);
        rY[4] = (rY[4] + _g_5*dt) / (1 - _h_5*dt);
        rY[5] = (rY[5] + _g_3*dt) / (1 - _h_3*dt);
        rY[6] = (rY[6] + _g_4*dt) / (1 - _h_4*dt);
        rY[7] = (rY[7] + _g_0*dt) / (1 - _h_0*dt);
        rY[8] = (rY[8] + _g_2*dt) / (1 - _h_2*dt);
        rY[9] = (rY[9] + _g_1*dt) / (1 - _h_1*dt);
        rY[11] = (rY[11] + _g_10*dt) / (1 - _h_10*dt);
        rY[12] = (rY[12] + _g_9*dt) / (1 - _h_9*dt);
        
        double _guess[7] = {rY[10],rY[14],rY[13],rY[15],rY[16],rY[18],rY[17]};
        CardiacNewtonSolver<7> *_solver = CardiacNewtonSolver<7>::Instance();
        _solver->Solve(*this, _guess);
        rY[10] = _guess[0];
        rY[14] = _guess[1];
        rY[13] = _guess[2];
        rY[15] = _guess[3];
        rY[16] = _guess[4];
        rY[18] = _guess[5];
        rY[17] = _guess[6];
    }
    
template<>
void OdeSystemInformation<BackwardEulerTenTusscher2006>::Initialise(void)
{
    // Time units: millisecond
    // 
    this->mVariableNames.push_back("membrane__V");
    this->mVariableUnits.push_back("millivolt");
    this->mInitialConditions.push_back(-85.23);

    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr1_gate__Xr1");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00621);

    this->mVariableNames.push_back("rapid_time_dependent_potassium_current_Xr2_gate__Xr2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.4712);

    this->mVariableNames.push_back("slow_time_dependent_potassium_current_Xs_gate__Xs");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0095);

    this->mVariableNames.push_back("fast_sodium_current_m_gate__m");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00172);

    this->mVariableNames.push_back("fast_sodium_current_h_gate__h");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7444);

    this->mVariableNames.push_back("fast_sodium_current_j_gate__j");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7045);

    this->mVariableNames.push_back("L_type_Ca_current_d_gate__d");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(3.373e-5);

    this->mVariableNames.push_back("L_type_Ca_current_f_gate__f");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.7888);

    this->mVariableNames.push_back("L_type_Ca_current_f2_gate__f2");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9755);

    this->mVariableNames.push_back("L_type_Ca_current_fCass_gate__fCass");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9953);

    this->mVariableNames.push_back("transient_outward_current_s_gate__s");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.999998);

    this->mVariableNames.push_back("transient_outward_current_r_gate__r");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(2.42e-8);

    this->mVariableNames.push_back("calcium_dynamics__Ca_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.000126);

    this->mVariableNames.push_back("calcium_dynamics__Ca_SR");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(3.64);

    this->mVariableNames.push_back("calcium_dynamics__Ca_ss");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.00036);

    this->mVariableNames.push_back("calcium_dynamics__R_prime");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9073);

    this->mVariableNames.push_back("sodium_dynamics__Na_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8.604);

    this->mVariableNames.push_back("potassium_dynamics__K_i");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(136.89);

    this->mInitialised = true;
}


// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(BackwardEulerTenTusscher2006)
