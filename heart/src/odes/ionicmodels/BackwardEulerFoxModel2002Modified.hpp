#ifndef _BackwardEulerFoxModel2002Modified_
#define _BackwardEulerFoxModel2002Modified_

/** @file
 *
 * Model: fox_model_2002
 *
 * Processed by pycml - CellML Tools in Python
 *     (translate: $Revision: 698 $, pycml: $Revision: 693 $)
 * on Wed May  9 09:21:04 2007
 *
 * <autogenerated>
 */

#include "ChasteSerialization.hpp"
#include <boost/serialization/base_object.hpp>
#include "AbstractBackwardEulerCardiacCell.hpp"
#include "AbstractStimulusFunction.hpp"

/**
 * Generated from CellML, and P_Ca parameter modified.
 */
class BackwardEulerFoxModel2002Modified : public AbstractBackwardEulerCardiacCell<3>
{
private:
    /** Needed for serialization. */
    friend class boost::serialization::access;
    /**
     * Archive the member variables.
     *
     * @param archive
     * @param version
     */
    template<class Archive>
    void serialize(Archive & archive, const unsigned int version)
    {
        // This calls serialize on the base class.
        archive & boost::serialization::base_object<AbstractBackwardEulerCardiacCell<3> >(*this);
    }
public:
    BackwardEulerFoxModel2002Modified(boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus);

    /**
     * Alternative constructor with the same signature as forwards Euler models.
     */
    BackwardEulerFoxModel2002Modified(boost::shared_ptr<AbstractIvpOdeSolver> /* unused */,
                                      boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus);


    ~BackwardEulerFoxModel2002Modified(void)
    {
    }

    double GetIIonic();

    void ComputeResidual(const double rCurrentGuess[3], double rResidual[3]);

    void ComputeJacobian(const double rCurrentGuess[3], double rJacobian[3][3]);

protected:
    void UpdateTransmembranePotential(double var_environment__time);

    void ComputeOneStepExceptVoltage(double var_environment__time);
};

// Must be last
#include "SerializationExportWrapper.hpp"
CHASTE_CLASS_EXPORT(BackwardEulerFoxModel2002Modified)

namespace boost
{
namespace serialization
{
/**
 * Allow us to not need a default constructor, by specifying how Boost should
 * instantiate a LuoRudyIModel1991OdeSystem instance.
 */
template<class Archive>
inline void save_construct_data(
    Archive & ar, const BackwardEulerFoxModel2002Modified * t, const unsigned int file_version)
{
    const boost::shared_ptr<AbstractIvpOdeSolver> p_solver = t->GetSolver();
    const boost::shared_ptr<AbstractStimulusFunction> p_stimulus = t->GetStimulusFunction();
    ar << p_solver;
    ar << p_stimulus;
}

/**
 * Allow us to not need a default constructor, by specifying how Boost should
 * instantiate a LuoRudyIModel1991OdeSystem instance (using existing constructor)
 *
 * NB this constructor allocates memory for the other member variables too.
 */
template<class Archive>
inline void load_construct_data(
    Archive & ar, BackwardEulerFoxModel2002Modified * t, const unsigned int file_version)
{
    boost::shared_ptr<AbstractIvpOdeSolver> p_solver;
    boost::shared_ptr<AbstractStimulusFunction> p_stimulus;
    ar >> p_solver;
    ar >> p_stimulus;
    ::new(t)BackwardEulerFoxModel2002Modified(p_solver, p_stimulus);
}
}
} // namespace ...

#endif
