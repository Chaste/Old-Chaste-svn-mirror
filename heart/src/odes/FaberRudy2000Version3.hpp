#ifndef _FaberRudy2000Version3_
#define _FaberRudy2000Version3_

/** @file
 *
 * Model: LR_Dynamic_model_2000
 *
 * Processed by pycml - CellML Tools in Python
 *     (translate: 1004, pycml: 896)
 * on Thu Dec 13 17:50:34 2007
 *
 * <autogenerated>
 */

#include <cmath>
#include <cassert>
#include "AbstractCardiacCell.hpp"
#include "Exception.hpp"
#include "AbstractStimulusFunction.hpp"
#include "OdeSystemInformation.hpp"

class FaberRudy2000Version3 : public AbstractCardiacCell
{
private:
    // for heterogeneities
    double mScaleFactorGks;
    double mScaleFactorIto;
    double mScaleFactorGkr;
public:
    FaberRudy2000Version3(boost::shared_ptr<AbstractIvpOdeSolver> pSolver,
                          boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus);

    ~FaberRudy2000Version3(void);

    void SetScaleFactorGks(double sfgks)
    {
        assert(sfgks>=0.0);
        mScaleFactorGks=sfgks;
    }

    void SetScaleFactorIto(double sfito)
    {
        assert(sfito>=0.0);
        mScaleFactorIto=sfito;
    }

    void SetScaleFactorGkr(double sfgkr)
    {
        assert(sfgkr>=0.0);
        mScaleFactorGkr=sfgkr;
    }

    double GetIIonic();

    void EvaluateYDerivatives (
            double var_environment__time,
            const std::vector<double> &rY,
            std::vector<double> &rDY);
};

#endif
