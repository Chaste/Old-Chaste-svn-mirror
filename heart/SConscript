import glob
import os

curdir = os.getcwd()

os.chdir('../')
files = glob.glob('*.cpp') 
os.chdir(curdir)

testfiles = glob.glob('../tests/Test*.hpp')
paralleltestfiles = glob.glob('../paralleltests/Test*.hpp')

os.chdir('../')
testsource = glob.glob('tests/*.cpp')
os.chdir(curdir)

base  = '-Icxxtest -Idatawriters -Iheart -I. -Iodes -Iheart/tests -Ipdes '

petsc_base = '../../petsc-2.2.1-with-mpi/'
petsc_inc = '-I'+petsc_base+'include '
petsc_bmake = '-I'+petsc_base+'bmake/linux-gnu '
# petsc_mpi = '-I'+petsc_base+'include/mpiuni '
petsc_mpi = ' '
petsc_incs = petsc_inc+petsc_bmake+petsc_mpi

petsc_libpath = '#'+petsc_base+'lib/libg_c++/linux-gnu/'


all_libs= ['petscts', 'petscsnes', 'petscksp', 'petscdm', 
'petscmat', 'petscvec', 'petsc', 'datawriter','heart','ode','testheart', 'pde']


opt= Environment(ENV = {'PATH' : os.environ['PATH']})
opt.Append(CCFLAGS = base+petsc_incs)
opt.Append(BOPT='g_c++')
opt.Replace(CXX='../../mpi/bin/mpicxx')

test = Builder(action = 'cxxtest/cxxtestgen.pl --error-printer -o $TARGET $SOURCES')
runtests = Builder(action = './$SOURCE | tee $TARGET')
#runparalleltests = Builder(action = '../../mpi/bin/mpirun -np 2 ./$SOURCE | tee $TARGET')
runparalleltests = Builder(action = './$SOURCE | tee $TARGET')

opt['BUILDERS']['Test'] = test
opt['BUILDERS']['RunTests'] = runtests
opt['BUILDERS']['RunParallelTests'] = runparalleltests

opt['ENV']['LD_LIBRARY_PATH'] = petsc_base+'lib/libg_c++/linux-gnu/'
opt.Library('testheart',testsource)
opt.Library('heart',files)

opt.Test('runner.cpp',testfiles) 
opt.Test('parallelrunner.cpp',paralleltestfiles)

opt.Program('testrunner',['runner.cpp'], LIBS=all_libs,LIBPATH=['../../datawriters/build', '../../odes/build', '../../pdes/build', '.', petsc_libpath])
opt.Program('paralleltestrunner',['parallelrunner.cpp'], LIBS=all_libs,LIBPATH=['../../datawriters/build', '../../odes/build', '../../pdes/build', '.', petsc_libpath])
opt.RunTests('build.log','testrunner')
opt.RunParallelTests('parbuild.log','paralleltestrunner')
