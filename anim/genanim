# Shell script to create animation following a simulation run
# It will create both a PoinTS and TRIangles file that can be read by Meshalyzer

#===========================================================

# Parameters that specify the location and name of the different input/output files

tetgen_mesh_prefix=/home/chaste/eclipse/workspace/Chaste/mesh/test/data/2D_0_to_1mm_400_elements
results_prefix=/home/chaste/eclipse/workspace/Chaste/testoutput/2DHeatEquation/2DHeatEquation
out_prefix=/home/chaste/eclipse/workspace/Chaste/anim/2D_0_to_1mm

#===========================================================

# Convert node file into pts file to be read by meshalyser
# Note: part of the conversion is specific to 1d, 2d and 3d, so comment/uncomment what is necessary

cat ${tetgen_mesh_prefix}.node | head -n 1 | awk '{print $1}' > ${out_prefix}.pts

# For 1D:
#cat ${tetgen_mesh_prefix}.node | tail -n +2 | awk '{print $2 "\t" 0 "\t" 0}' >> ${out_prefix}.pts

# For 2D:
cat ${tetgen_mesh_prefix}.node | tail -n +2 | awk '{print $2 "\t" $3 "\t" 0}' >> ${out_prefix}.pts

# For 3D:
#cat ${tetgen_mesh_prefix}.node | tail -n +2 | awk '{print $2 "\t" $3 "\t" $4}' >> ${out_prefix}.pts

#===========================================================

# Convert ele/face file into tri file to be read by meshalyser
# Note: depending on whether we are in 2d or 3d the script is different

# For 2D:

cat ${tetgen_mesh_prefix}.ele | head -n 1 | awk '{print $1}' > ${out_prefix}.tri
cat ${tetgen_mesh_prefix}.ele | tail -n +2 | awk '{print $2 "\t" $3 "\t" $4 "\t" 1}' >> ${out_prefix}.tri

# For 3D:

#cat ${tetgen_mesh_prefix}.face | head -n 1 | awk '{print $1}' > ${out_prefix}.tri
#cat ${tetgen_mesh_prefix}.face | tail -n +2 | awk '{print $2 "\t" $3 "\t" $4 "\t" 1}' >> ${out_prefix}.tri

#========================================testoutput/MonoDg02dWithPointStimulus===================

# Create the scalar data

rm -f ${out_prefix}.dat
for i in ${results_prefix}_*.dat; do
  tail -n +2 $i >> ${out_prefix}.dat
done
