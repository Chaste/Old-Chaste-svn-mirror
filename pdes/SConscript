import glob
import os

curdir = os.getcwd()

os.chdir('../')
files = glob.glob('*.cpp') 
os.chdir(curdir)

testfiles = glob.glob('../tests/Test*.hpp')
os.chdir('../')
testsource = glob.glob('tests/*.cpp')
os.chdir(curdir)



base  = '-Icxxtest -Idatawriters -Iheart -Iodes -Icancer -Iparameters -Ipdes -I pdes/tests -I. '

petsc_base = '../../petsc-2.2.1-with-mpi/'
petsc_inc = '-I'+petsc_base+'include '
petsc_bmake = '-I'+petsc_base+'bmake/linux-gnu '
petsc_mpi = '-I'+petsc_base+'include/mpiuni '
petsc_incs = petsc_inc+petsc_bmake+petsc_mpi

petsc_libpath = '#'+petsc_base+'lib/libg_c++/linux-gnu/'


all_libs= ['petscts', 'petscsnes', 'petscksp', 'petscdm', 
'petscmat', 'petscvec', 'petsc', 'datawriter','pde','testpde']


opt= Environment(ENV = {'PATH' : os.environ['PATH']})
opt.Append(CCFLAGS = base+petsc_incs)
opt.Append(BOPT='g_c++')
opt.Replace(CXX='../../mpi/bin/mpicxx')

test = Builder(action = 'cxxtest/cxxtestgen.pl --error-printer -o $TARGET $SOURCES')
runtests = Builder(action = './$SOURCE | tee $TARGET')
#MPI runparalleltests = Builder(action = '../../mpi/bin/mpirun -np 2 ./$SOURCE | tee $TARGET')

opt['BUILDERS']['Test'] = test
opt['BUILDERS']['RunTests'] = runtests
#MPI opt['BUILDERS']['RunParTests'] = runparalleltests

opt['ENV']['LD_LIBRARY_PATH'] = petsc_base+'lib/libg_c++/linux-gnu/'
opt.Library('pde',files)
opt.Library('testpde',testsource)

opt.Test('runner.cpp',testfiles) 
opt.Program('testrunner',['runner.cpp'], LIBS=all_libs,LIBPATH=['../../datawriters/build', '.', petsc_libpath])
opt.RunTests('build.log','testrunner')
#MPI opt.RunParTests('build.log','testrunner')

