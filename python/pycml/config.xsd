<?xml version="1.0" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:element name="pycml_config" type="pycml_config_type">
        <xs:annotation>
            <xs:documentation>Root element for PyCml configuration file</xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:element name="var" type="var_type">
        <xs:annotation>
            <xs:documentation>A variable specification.
            An element with this name and type occurs in multiple contexts.</xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:complexType name="pycml_config_type">
        <xs:annotation>
            <xs:documentation>Main type for the configuration of PyCml.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="global" type="settings_type">
                <xs:annotation>
                    <xs:documentation>Global settings applying to all models, unless overridden.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:sequence maxOccurs="unbounded">
                <xs:element name="for_model" type="for_model_type" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Settings applying to a specific model.</xs:documentation>    
                    </xs:annotation>
                </xs:element>
                <xs:element name="for_models" type="for_models_type" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Settings applying to a specific group of models.</xs:documentation>    
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="for_model_type">
        <xs:annotation>
            <xs:documentation>Specifies a model either by name or cmeta:id, and settings to apply to that model.</xs:documentation>
        </xs:annotation>
        <xs:group ref="settings_elements"/>
        <xs:attribute name="id" type="cellml_id_type"/>
        <xs:attribute name="name" type="cellml_id_type"/>
    </xs:complexType>
    
    <xs:complexType name="for_models_type">
        <xs:annotation>
            <xs:documentation>Specifies a group of models by cmeta:id, and settings to apply to those models.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="ids" type="ids_type"/>
            <xs:group ref="settings_elements"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="settings_type">
        <xs:annotation>
            <xs:documentation>This type encapsulates all the settings that can be specified in the configuration file.
            It can be used either for global or model-specific settings.</xs:documentation>
        </xs:annotation>
        <xs:group ref="settings_elements"/>
    </xs:complexType>
    
    <xs:group name="settings_elements">
        <xs:annotation>
            <xs:documentation>This collection of elements give all the settings that can be specified in the configuration file.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="lookup_tables" type="lookup_tables_type" minOccurs="0"/>
            <xs:element name="currents" type="currents_type" minOccurs="0"/>
            <xs:element name="transmembrane_potential" type="var_list_type" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Specifies which variable represents the transmembrane potential.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="membrane_capacitance" type="var_list_type" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Specifies which variable represents the cell membrane capacitance.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:group>
    
    <xs:complexType name="lookup_tables_type">
        <xs:annotation>
            <xs:documentation>Specification of a collection of lookup tables.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="lookup_table" type="lookup_table_type" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="lookup_table_type">
        <xs:annotation>
            <xs:documentation>Specification of a single lookup table.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="var">
                <xs:annotation>
                    <xs:documentation>The variable used to index the table.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="min" type="xs:double" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The minimum value of the keying variable in this table.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="max" type="xs:double" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The maximum value of the keying variable in this table.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="step" type="xs:double" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The granularity of this table.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
        
    <xs:complexType name="currents_type">
        <xs:annotation>
            <xs:documentation>Specification of ionic currents, including the intracellular stimulus.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="stimulus" type="var_list_type" minOccurs="0"/>
            <xs:element name="ionic_match" type="var_list_type" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>This is the only variable specification for which the regular expression features are used,
                        in order to match all transmembrane ionic currents.
                        Note that the stimulus current is automatically excluded from being an ionic current.
                        Also note that there are implicit ^ and $ around the regular expression.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="var_list_type">
        <xs:annotation>
            <xs:documentation>A list of variable specifications.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="var" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="var_type">
        <xs:annotation>
            <xs:documentation>Allows the specification of a variable in the model.
                The kind of reference is determined by the type attribute:
                1. name: Variable names are given in full form, i.e. component,variable.
                2. oxmeta: Use the standardised name from the oxmeta annotations.
                3. config-name: By reference to a section of the config file</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="var_name_type">
                <xs:attribute name="type" type="var_type_type" default="name"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    
    <xs:complexType name="ids_type">
        <xs:annotation>
            <xs:documentation>A list of CellML identifiers.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="id" type="cellml_id_type" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:simpleType name="cellml_id_type">
        <xs:annotation>
            <xs:documentation>The type of identifiers in CellML documents:
                alphanumeric strings that can contain underscores, but must not start with a digit.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[_a-zA-Z]+[_a-zA-Z0-9]*"></xs:pattern>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="var_name_type">
        <xs:annotation>
            <xs:documentation>What a variable "name" can look like.
            This extends the CellML name type to allow for full names (component,variable)
            and simple regular expressions (containing the metacharacters . * and ?).</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[_a-zA-Z.]+[_a-zA-Z0-9.*?]*(,[_a-zA-Z.]+[_a-zA-Z0-9.*?]*)?"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="var_type_type">
        <xs:annotation>
            <xs:documentation>Possible values for the type of a var reference.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="name"/>
            <xs:enumeration value="oxmeta"/>
            <xs:enumeration value="config-name"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>