= Running a simple example: propagation in a tissue fibre =

=== Getting the data ===

Download and save the attached file [attachment:Propagation1d.tgz Propagation1d.tgz].
Either use an Archive Manager to extract the content to disk or save it and then unpack it with
{{{
#!sh
tar xvfz  Propagation1d.tgz
}}}

=== Running the simulation ===

Change directory to {{{Propagation1d}}}
{{{
#!sh
cd Propagation1d
}}}

In this folder you will find the following files:
 * `ChasteParameters.xml` -- this file describes the simulation, and can be used to override the [https://chaste.comlab.ox.ac.uk/docs/HeartConfigDefaults_8hpp.html default parameter values] (in releases of the executable up to and including version 2.0, the default parameters were read in from another xml file, `ChasteDefaults.xml`).
 * `ChasteParameters_2_1.xsd` -- XML schema for input validation (in general never has to be altered or touched).

Run the simulation by doing
{{{
<path_to_chaste>/Chaste.sh ChasteParameters.xml
}}}
'''Note:''' in releases up to and including version 2.0, the executable would be called directly (ie: `<path_to_chaste>/Chaste ChasteParameters.xml`), in release 2.1 the executable should be called via the shell script `Chaste.sh`; as above.

A folder called {{{testoutput}}} will appear once the simulation has finished.

=== Visualising the results ===

Move into the newly created output folder
{{{
#!sh
cd testoutput/ChasteResults
}}}

In this folder you will find the following files and folders:
 * `progress_status.txt`  -- this file can be viewed whilst the simulation is running to gauge how long it will take
 * `1dResults.h5` -- the output of the simulation, in HDF5 format
 * `output` (folder) -- contains the output converted into meshalyzer format

Move now into the Meshalyzer-compatible output folder 
{{{
#!sh
cd output
}}}
Launch Meshalyzer with
{{{
<path_to_meshalyzer>/meshalyzer 1dResults_mesh
}}}
and visualise the results by loading the `1dResults_V.dat` file.


=== Understanding the XML parameters file ===

Open `ChasteParameters.xml` (it is sensible to do this in a web-browser or XML editor in order to get syntax highlighting). The file should be reasonably readable; it defines: 
 * a 1D simulation that lasts for 500ms
 * the use of the monodomain model 
   * to use bidomain, the only thing that needs to be done is to change `Mono` to `Bi`
 * a Luo-Rudy cell model as the default cell model
 * a 1D autogenerated mesh of length 4cm
 * a stimulated region in the first 0.2cm (stimulus is applied every 100ms)
   * note: in the `Cuboid` definition, y and z coordinates are ignored in 1D simulations
 * output directory and filenames
 * physiological parameters: conductivities, capacitance, surface-area-to-volume ratio
   * in monodomain problems, the defined intracellular conductivity is used '''not''' a harmonic mean. The extracellular conductivity is therefore ignored, as are the components in the transverse (sheet) and normal directions since this is a 1D simulation.
 * Numerical parameters including timesteps and KSP (linear solver) options

=== Running a 2D tissue simulation instead ===

Now we are going to change our geometry description to create a tissue sheet instead of a fibre.

Go to {{{ChasteParameters.xml}}} and find the following section:
{{{
#!xml
<Mesh unit="cm">
	<Fibre x="4.0" inter_node_space="0.01"/>    
</Mesh>
}}}

We can change the geometry to be a tissue sheet:
{{{
#!xml
<Mesh unit="cm">
	<Sheet x="2.0" y="2.0" inter_node_space="0.03"/>    
</Mesh>
}}}

In addition, the following parameters need to be modified:
{{{
#!xml
<SpaceDimension>2</SpaceDimension>
<SimulationDuration unit="ms">30.0</SimulationDuration>
}}}

Rerun the simulation and follow the previous section to visualise the results.


